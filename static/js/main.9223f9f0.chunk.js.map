{"version":3,"sources":["containers/app/app.styles.jsx","components/header/header.styles.jsx","components/header/header.component.jsx","components/menu/menu.styles.jsx","components/cross/cross.styles.jsx","components/cross/cross.component.jsx","components/circle/circle.styles.jsx","components/circle/circle.component.jsx","redux/menu/menu.types.js","components/menu/menu.component.jsx","redux/menu/menu.actions.js","components/board/board.styles.jsx","components/square/square.styles.jsx","components/square/square.component.jsx","redux/board/board.types.js","redux/board/board.actions.js","redux/score/score.types.js","redux/score/score.actions.js","utils.js","components/component-decider/component-decider.component.jsx","components/board/board.component.jsx","components/scoreboard/scoreboard.styles.jsx","components/scoreboard/scoreboard.component.jsx","components/reset-button/reset-button.styles.jsx","components/reset-button/reset-button.component.jsx","components/result/result.styles.jsx","components/result/result.component.jsx","containers/app/app.container.jsx","redux/menu/menu.reducer.js","redux/board/board.reducer.js","redux/score/score.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["AppContainerStyles","styled","div","CurrentPlayerStyles","span","HeaderTextStyles","Header","MenuContainerStyles","TitleTextStyles","SubMenuStyles","DrawAnimation","keyframes","CrossStyles","svg","Cross","clickEvent","width","height","viewBox","onClick","x1","y1","x2","y2","CircleStyles","Circle","cx","cy","r","menuTypes","SET_NO_OF_PLAYERS","SET_PLAYER_1_TOOL","SET_MENU_LEVEL","RESET_MENU","connect","menu","level","menuLevel","player2","dispatch","setNoOfPlayers","val","type","payload","noOfPlayers","changeLevel","setMenuLevel","changePlayerTool","setPlayer1Tool","style","marginTop","cursor","BoardContainerStyles","SquareStyles","Square","boardTypes","RESET_BOARD","UPDATE_BOARD","SET_CURRENT_PLAYER","resetBoard","scoreTypes","SET_SCORE","RESET_SCORE","UPDATE_RESULT","updateResult","calculateResponse","p","COMPUTER","HUMAN","EMPTY","emptyPositionInLineFullOf","player","winningPosition","undefined","defendingPosition","includes","indexOf","sleep","ms","Promise","resolve","setTimeout","detectWinner","lineFullOf","gridIsFull","every","position","playerWon","computerWon","tie","ComponentDecider","handleClick","a","props","pos","updateBoard","updatePlayer","playingBoard","currPlayer","player1Tool","setResult","tool","nextPlayer","boardCopy","response","computerTool","calculatedResult","player2Tool","this","React","Component","board","currentPlayer","map","idx","ScoreBoardContainerStyles","TextStyles","score","scores","scoreArray","ResetButtonStyles","menuReset","boardReset","scoreReset","ResultContainerStyles","CloseButtonStyles","button","getIndex","scoreUpdater","resultReset","winner","message","App","result","INITIAL_STATE","menuReducer","state","action","boardReducer","boardCpy","scoreReducer","rootReducer","combineReducers","middlewares","thunkMiddleware","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9223f9f0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const AppContainerStyles = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const CurrentPlayerStyles = styled.span`\r\n    margin-left: 6.8rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n    font-size: 2rem;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const HeaderTextStyles = styled.span`\r\n    font-family: 'Permanent Marker', cursive;\r\n    font-size: 3.6rem;\r\n    color: rgb(28, 144, 221);\r\n    text-align: center;\r\n`;","import React from 'react';\r\n\r\n// Stlyes\r\nimport {HeaderTextStyles} from './header.styles';\r\n\r\nconst Header = () => (\r\n    <HeaderTextStyles>Tic Tac Toe</HeaderTextStyles>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const MenuContainerStyles = styled.div`\r\n    margin-top: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const TitleTextStyles = styled.span`\r\n    font-family: 'Patrick Hand', cursive;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n`;\r\n\r\nexport const SubMenuStyles = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: 4rem;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    font-size: 6rem;\r\n    cursor: pointer;\r\n`;","import styled, {keyframes} from \"styled-components\";\r\n\r\nconst DrawAnimation = keyframes`\r\n    to {\r\n        stroke-dashoffset: 0;\r\n    }\r\n`;\r\n\r\nexport const CrossStyles = styled.svg`\r\n    stroke-width: 15px;\r\n    fill: none;\r\n    stroke-linecap: round;\r\n\r\n    stroke-dasharray: 1000;\r\n    stroke-dashoffset: 1000;\r\n\r\n    stroke: #bb2b29;\r\n    background-color: #0d1117;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        stroke: #d6302d;\r\n    }\r\n\r\n    line:nth-of-type(1) {\r\n        animation: 1s linear forwards ${DrawAnimation};\r\n    }\r\n    line:nth-of-type(2) {\r\n        animation: 1s linear 0.2s forwards ${DrawAnimation};\r\n    }\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport {CrossStyles} from './cross.styles';\r\n\r\nconst Cross = ({clickEvent}) => (\r\n    <CrossStyles\r\n        width=\"100\" height=\"100\" \r\n        viewBox=\"-50 -50 100 100\" \r\n        onClick={clickEvent}\r\n    >\r\n        <line x1=\"-40\" y1=\"-40\" x2=\"40\" y2=\"40\" />\r\n        <line x1=\"-40\" y1=\"40\" x2=\"40\" y2=\"-40\" />\r\n    </CrossStyles>\r\n);\r\n\r\nexport default Cross;","import styled, {keyframes} from \"styled-components\";\r\n\r\nconst DrawAnimation = keyframes`\r\n    to {\r\n        stroke-dashoffset: 0;\r\n    }\r\n`;\r\n\r\nexport const CircleStyles = styled.svg`\r\n    stroke-width: 15px;\r\n    fill: none;\r\n    stroke-linecap: round;\r\n\r\n    stroke-dasharray: 1000;\r\n    stroke-dashoffset: 1000;\r\n\r\n    stroke: #2ea043;\r\n    background-color: #0d1117;\r\n    border-radius: 10px;\r\n    animation: ${DrawAnimation} 1s linear forwards;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        stroke: #38c251;\r\n    }\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport {CircleStyles} from './circle.styles';\r\n\r\nconst Circle = ({clickEvent}) => (\r\n    <CircleStyles \r\n        width=\"100\" height=\"100\" \r\n        viewBox=\"-50 -50 100 100\" \r\n        onClick={clickEvent}\r\n    >\r\n        <circle cx=\"0\" cy=\"0\" r=\"40\" />\r\n    </CircleStyles>\r\n);\r\n\r\nexport default Circle;","const menuTypes = {\r\n    SET_NO_OF_PLAYERS: \"SET_NO_OF_PLAYERS\",\r\n    SET_PLAYER_1_TOOL: \"SET_PLAYER_1_TOOL\",\r\n    SET_MENU_LEVEL: \"SET_MENU_LEVEL\",\r\n    RESET_MENU: \"RESET_MENU\"\r\n};\r\n\r\nexport default menuTypes;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// Styles\r\nimport {\r\n    MenuContainerStyles,\r\n    TitleTextStyles,\r\n    SubMenuStyles\r\n} from \"./menu.styles\";\r\n\r\n// Components\r\nimport Cross from '../cross/cross.component';\r\nimport Circle from '../circle/circle.component';\r\n\r\n// Actions\r\nimport {\r\n    noOfPlayers,\r\n    setMenuLevel,\r\n    setPlayer1Tool\r\n} from '../../redux/menu/menu.actions';\r\n\r\nconst Menu = ({\r\n    level, \r\n    setNoOfPlayers, \r\n    changeLevel, \r\n    changePlayerTool,\r\n    player2\r\n}) => {\r\n    return (\r\n        level === 0 \r\n        ?   <MenuContainerStyles>\r\n                <TitleTextStyles>Number of Players</TitleTextStyles>\r\n                <SubMenuStyles>\r\n                    <span onClick={() => setNoOfPlayers(1)}>1</span>\r\n                    <span onClick={() => setNoOfPlayers(2)}>2</span>\r\n                </SubMenuStyles>\r\n            </MenuContainerStyles>\r\n        :   <MenuContainerStyles>\r\n                <TitleTextStyles>\r\n                    {\r\n                        player2 === \"Computer\"\r\n                        ? \"You take\"\r\n                        : \"Player 1 takes\"\r\n                    }\r\n                </TitleTextStyles>\r\n                <SubMenuStyles style={{marginTop: \"2rem\"}}>\r\n                    <span onClick={() => changePlayerTool(\"cross\")}>\r\n                        <Cross/>\r\n                    </span>\r\n                    <span onClick={() => changePlayerTool(\"circle\")}>\r\n                        <Circle />\r\n                    </span>\r\n                </SubMenuStyles>\r\n                <TitleTextStyles\r\n                    style={{marginTop: \"1rem\", cursor: \"pointer\"}}\r\n                    onClick={() => changeLevel(0)}\r\n                >\r\n                    &#8592; Back\r\n                </TitleTextStyles>\r\n            </MenuContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({menu}) => ({\r\n    level: menu.menuLevel,\r\n    player2: menu.player2\r\n});\r\n\r\nconst mapDispachToProps = dispatch => ({\r\n    setNoOfPlayers: val => dispatch(noOfPlayers(val)),\r\n    changeLevel: val => dispatch(setMenuLevel(val)),\r\n    changePlayerTool: val => dispatch(setPlayer1Tool(val))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(Menu);","import menuTypes from \"./menu.types\";\r\n\r\nexport const noOfPlayers = val => ({\r\n    type: menuTypes.SET_NO_OF_PLAYERS,\r\n    payload: val\r\n});\r\n\r\nexport const setMenuLevel = val => ({\r\n    type: menuTypes.SET_MENU_LEVEL,\r\n    payload: val\r\n});\r\n\r\nexport const setPlayer1Tool = val => ({\r\n    type: menuTypes.SET_PLAYER_1_TOOL,\r\n    payload: val\r\n});\r\n\r\nexport const resetMenu = () => ({\r\n    type: menuTypes.RESET_MENU\r\n});","import styled from \"styled-components\";\r\n\r\nexport const BoardContainerStyles = styled.div`\r\n    display: grid;\r\n    max-width: 100vw;\r\n    max-height: 100vh;\r\n    grid-column-gap: 10px;\r\n    grid-row-gap: 10px;\r\n    padding: 7px;\r\n    border-radius: 14px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows: repeat(3, 1fr);\r\n    background-color: rgb(28, 120, 182);\r\n\r\n    &:hover {\r\n        background-color: rgb(60, 161, 228);\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const SquareStyles = styled.div`\r\n    width: 4.5rem;\r\n    height: 4.5rem;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    background-color: #0d1117;\r\n    padding: 14px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport {SquareStyles} from \"./square.styles\";\r\n\r\nconst Square = ({clickEvent}) => (\r\n    <SquareStyles onClick={clickEvent}>\r\n    </SquareStyles>\r\n);\r\n\r\nexport default Square;","const boardTypes = {\r\n    RESET_BOARD: 'RESET_BOARD',\r\n    UPDATE_BOARD: 'UPDATE_BOARD',\r\n    SET_CURRENT_PLAYER: 'SET_CURRENT_PLAYER'\r\n};\r\n\r\nexport default boardTypes;","import boardTypes from \"./board.types\";\r\n\r\nexport const resetBoard = () => ({\r\n    type: boardTypes.RESET_BOARD\r\n});\r\n\r\nexport const updateBoard = (pos, val) => ({\r\n    type: boardTypes.UPDATE_BOARD,\r\n    payload: {pos, val}\r\n});\r\n\r\nexport const updatePlayer = val => ({\r\n    type: boardTypes.SET_CURRENT_PLAYER,\r\n    payload: val\r\n});","const scoreTypes = {\r\n    SET_SCORE: \"SET_SCORE\",\r\n    RESET_SCORE: \"RESET_SCORE\",\r\n    UPDATE_RESULT: \"UPDATE_RESULT\"\r\n};\r\n\r\nexport default scoreTypes;","import scoreTypes from \"./score.types\";\r\n\r\nexport const updateScore = val => ({\r\n    type: scoreTypes.SET_SCORE,\r\n    payload: val\r\n});\r\n\r\nexport const resetScore = () => ({\r\n    type: scoreTypes.RESET_SCORE\r\n});\r\n\r\nexport const updateResult = val => ({\r\n    type: scoreTypes.UPDATE_RESULT,\r\n    payload: val\r\n});","export function calculateResponse(p, COMPUTER, HUMAN, EMPTY = 0) {\r\n\r\n    // This function gives back the first empty position (if any) that is in a line\r\n    // that is otherwise full of circles / crosses (depending on the parameter)\r\n    function emptyPositionInLineFullOf(player) {\r\n        if (p[0] === EMPTY && (                   // If the first position is empty,\r\n            (p[1] === player && p[2] === player) ||   // but otherwise the first row is full\r\n            (p[3] === player && p[6] === player) ||   // or the first column is full\r\n            (p[4] === player && p[8] === player)      // or the diagonal line starting from first position is full\r\n        )) return 0;                            // then return the first position\r\n        // because it's a good position to defend / attack\r\n\r\n        if (p[1] === EMPTY && (                   // If the second position is empty\r\n            (p[0] === player && p[2] === player) ||   // but otherwise the first row is full\r\n            (p[4] === player && p[7] === player)      // or the second column is full\r\n        )) return 1;                            // then return the second position\r\n        // because it's a good position to defend / attack\r\n\r\n        if (p[2] === EMPTY && (\r\n            (p[0] === player && p[1] === player) ||\r\n            (p[5] === player && p[8] === player) ||\r\n            (p[4] === player && p[6] === player)\r\n        )) return 2;\r\n\r\n        if (p[3] === EMPTY && (\r\n            (p[4] === player && p[5] === player) ||\r\n            (p[0] === player && p[6] === player)\r\n        )) return 3;\r\n\r\n        if (p[4] === EMPTY && (\r\n            (p[3] === player && p[5] === player) ||\r\n            (p[1] === player && p[7] === player) ||\r\n            (p[0] === player && p[8] === player) ||\r\n            (p[2] === player && p[6] === player)\r\n        )) return 4;\r\n\r\n        if (p[5] === EMPTY && (\r\n            (p[3] === player && p[4] === player) ||\r\n            (p[2] === player && p[8] === player)\r\n        )) return 5;\r\n\r\n        if (p[6] === EMPTY && (\r\n            (p[7] === player && p[8] === player) ||\r\n            (p[0] === player && p[3] === player) ||\r\n            (p[4] === player && p[2] === player)\r\n        )) return 6;\r\n\r\n        if (p[7] === EMPTY && (\r\n            (p[6] === player && p[8] === player) ||\r\n            (p[1] === player && p[4] === player)\r\n        )) return 7;\r\n\r\n        if (p[8] === EMPTY && (\r\n            (p[6] === player && p[7] === player) ||\r\n            (p[2] === player && p[5] === player) ||\r\n            (p[4] === player && p[0] === player)\r\n        )) return 8;\r\n    }\r\n\r\n    // If there's a position the computer can take and win then take it\r\n    const winningPosition = emptyPositionInLineFullOf(COMPUTER);\r\n    if (winningPosition !== undefined)\r\n        return winningPosition;\r\n\r\n    // Otherwise if there's a position the human can take in next turn to win, then take it\r\n    const defendingPosition = emptyPositionInLineFullOf(HUMAN);\r\n    if (defendingPosition !== undefined)\r\n        return defendingPosition;\r\n\r\n    // Otherwise pick random position that's empty\r\n    if (!p.includes(EMPTY))\r\n        return -1;\r\n    return p.indexOf(EMPTY);\r\n    // while (true) {\r\n    //     const randomPosition = Math.floor(Math.random() * 9)\r\n    //     if (p[randomPosition] === EMPTY)\r\n    //         return randomPosition;\r\n    // }\r\n}\r\n\r\nexport function sleep(ms) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n\r\nexport function detectWinner(p, HUMAN, COMPUTER, EMPTY = 0) {\r\n    function lineFullOf(player) {\r\n        if (p[0] === player && p[1] === player && p[2] === player) return true; // First line is full\r\n        if (p[3] === player && p[4] === player && p[5] === player) return true; // Second line is full\r\n        if (p[6] === player && p[7] === player && p[8] === player) return true;\r\n\r\n        if (p[0] === player && p[3] === player && p[6] === player) return true; // First column is full\r\n        if (p[1] === player && p[4] === player && p[7] === player) return true;\r\n        if (p[2] === player && p[5] === player && p[8] === player) return true;\r\n\r\n        if (p[0] === player && p[4] === player && p[8] === player) return true;\r\n        if (p[2] === player && p[4] === player && p[6] === player) return true;\r\n    }\r\n\r\n    function gridIsFull() {\r\n        return p.every(position => position !== EMPTY);\r\n    }\r\n\r\n    const playerWon = lineFullOf(HUMAN);\r\n    if (playerWon !== undefined)\r\n        return HUMAN;\r\n\r\n    const computerWon = lineFullOf(COMPUTER);\r\n    if (computerWon !== undefined)\r\n        return COMPUTER;\r\n\r\n    const tie = gridIsFull();\r\n    if (tie)\r\n        return \"tie\";\r\n    return null;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// Styles\r\n// import \"./component-decider.styles.css\";\r\n\r\n// Components\r\nimport Square from \"../square/square.component\";\r\nimport Circle from \"../circle/circle.component\";\r\nimport Cross from \"../cross/cross.component\";\r\n\r\n// Actions\r\nimport {\r\n    updateBoard,\r\n    updatePlayer\r\n} from \"../../redux/board/board.actions\";\r\nimport {updateResult} from \"../../redux/score/score.actions\";\r\n\r\n// Functions\r\nimport {\r\n    calculateResponse,\r\n    sleep,\r\n    detectWinner\r\n} from \"../../utils\";\r\n\r\nclass ComponentDecider extends React.Component {\r\n    handleClick = async () => {\r\n        const {\r\n            pos,\r\n            updateBoard,\r\n            updatePlayer,\r\n            playingBoard,\r\n            currPlayer,\r\n            player1Tool,\r\n            player2,\r\n            setResult\r\n        } = this.props;\r\n        if (playingBoard[pos] !== 0)\r\n            return;\r\n        let tool;\r\n        if (currPlayer === \"Player 1\")\r\n            tool = player1Tool;\r\n        else\r\n            tool = player1Tool === \"circle\" ? \"cross\" : \"circle\";\r\n        updateBoard(pos, tool);\r\n        let nextPlayer = currPlayer === \"Player 1\" ? player2 : \"Player 1\";\r\n        updatePlayer(nextPlayer);\r\n        let boardCopy =[...playingBoard];\r\n        boardCopy[pos] = tool;\r\n        if (nextPlayer === \"Computer\") {\r\n            let computerTool = player1Tool === \"circle\" ? \"cross\" : \"circle\";\r\n            let response = calculateResponse(\r\n                boardCopy, \r\n                computerTool,\r\n                player1Tool\r\n            );\r\n            if (response === -1) {\r\n                setResult(\"tie\");\r\n                return;\r\n            }\r\n            await sleep(200);\r\n            boardCopy[response] = computerTool;\r\n            updateBoard(response, computerTool);\r\n            updatePlayer(\"Player 1\");\r\n        }\r\n        let calculatedResult = null;\r\n        \r\n        const player2Tool = player1Tool === \"circle\" ? \"cross\" : \"circle\";\r\n        calculatedResult = detectWinner([...boardCopy], player1Tool, player2Tool);\r\n        switch (calculatedResult) {\r\n            case player1Tool:\r\n                calculatedResult = player2 === \"Computer\" ? \"You\" : \"Player 1\";\r\n                break;\r\n            case player2Tool: \r\n                calculatedResult = player2;\r\n                break;\r\n            case \"tie\": \r\n                calculatedResult = \"tie\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setResult(calculatedResult);\r\n\r\n    }\r\n\r\n    render() {\r\n        const {val} = this.props;\r\n        switch (val) {\r\n            case \"circle\":\r\n                return <Circle clickEvent={this.handleClick}/>\r\n            case \"cross\":\r\n                return <Cross clickEvent={this.handleClick}/>\r\n            default:\r\n                return <Square clickEvent={this.handleClick}/>\r\n        }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = ({board, menu}) => ({\r\n    currPlayer: board.currentPlayer,\r\n    playingBoard: board.board,\r\n    player1Tool: menu.player1Tool,\r\n    player2: menu.player2\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateBoard: (pos, val) => dispatch(updateBoard(pos, val)),\r\n    updatePlayer: val => dispatch(updatePlayer(val)),\r\n    setResult: val => dispatch(updateResult(val))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ComponentDecider);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {BoardContainerStyles} from './board.styles';\r\n\r\n// Componets\r\nimport ComponentDecider from '../component-decider/component-decider.component';\r\n\r\nconst Board = ({playingBoard}) => {\r\n    return (\r\n        <BoardContainerStyles>\r\n            {\r\n                playingBoard.map(\r\n                    (val, idx) => \r\n                        <ComponentDecider\r\n                            key={idx}\r\n                            val={val}\r\n                            pos={idx}\r\n                        />\r\n                )\r\n            }\r\n        </BoardContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({board}) => ({\r\n    playingBoard: board.board\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Board);","import styled from \"styled-components\";\r\n\r\nexport const ScoreBoardContainerStyles = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-right: 14rem;\r\n`;\r\n\r\nexport const TextStyles = styled.span`\r\n    font-size: 1.4rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {\r\n    ScoreBoardContainerStyles,\r\n    TextStyles\r\n} from \"./scoreboard.styles\";\r\n\r\nconst ScoreBoard = ({player2, scores}) => {\r\n    return (\r\n        <ScoreBoardContainerStyles>\r\n            <TextStyles>Games: {scores[0]}</TextStyles>\r\n            <TextStyles>\r\n                {player2 === \"Computer\" ? \"You\" : \"Player 1\"}: {scores[1]}\r\n            </TextStyles>\r\n            <TextStyles>\r\n                {player2}: {scores[2]}\r\n            </TextStyles>\r\n            <TextStyles>Tie: {scores[3]}</TextStyles>\r\n        </ScoreBoardContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({menu, score}) => ({\r\n    player2: menu.player2,\r\n    scores: score.scoreArray\r\n});\r\n\r\nexport default connect(mapStateToProps)(ScoreBoard);","import styled from \"styled-components\";\r\n\r\nexport const ResetButtonStyles = styled.div`\r\n    appearance: none;\r\n    border: 1px solid;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n    padding: 5px 16px;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n    margin-left: 14rem;\r\n    margin-top: 0.4rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n    background-color: #da3633;\r\n    border-color: #f85149;\r\n    color: white;\r\n\r\n    &:hover {\r\n        color: #f85149;\r\n        border-color: #30363d;\r\n        background-color: #21262d;\r\n    }\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {ResetButtonStyles} from \"./reset-button.styles\";\r\n\r\n// Actions\r\nimport {resetMenu} from \"../../redux/menu/menu.actions\";\r\nimport {resetBoard} from '../../redux/board/board.actions';\r\nimport {resetScore} from \"../../redux/score/score.actions\";\r\n\r\nconst ResetButton = ({menuReset, boardReset, scoreReset}) => (\r\n    <ResetButtonStyles\r\n        onClick={\r\n            () => {\r\n                menuReset();\r\n                boardReset();\r\n                scoreReset();\r\n            }\r\n        }\r\n    >Reset</ResetButtonStyles>\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    menuReset: () => dispatch(resetMenu()),\r\n    boardReset: () => dispatch(resetBoard()),\r\n    scoreReset: () => dispatch(resetScore())\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(ResetButton);","import styled from \"styled-components\";\r\n\r\nexport const ResultContainerStyles = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    font-size: 4em;\r\n    font-weight: bold;\r\n    background-color: rgba(0, 0, 0, 0.9);\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nexport const CloseButtonStyles = styled.button`\r\n    appearance: none;\r\n    border: 1px solid;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n    padding: 5px 16px;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n    margin-top: 0.4rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n    background-color: #dfd32c;\r\n    border-color: #dceb0c;\r\n    color: white;\r\n\r\n    &:hover {\r\n        color: #dceb0c;\r\n        border-color: #30363d;\r\n        background-color: #21262d;\r\n    }\r\n`;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// Styles\r\nimport {\r\n    ResultContainerStyles,\r\n    CloseButtonStyles\r\n} from \"./result.styles\";\r\n\r\n// Action\r\nimport {resetBoard} from \"../../redux/board/board.actions\";\r\nimport {updateScore, updateResult} from \"../../redux/score/score.actions\";\r\n\r\nconst getIndex = {\r\n    \"Player 1\": 0,\r\n    \"You\": 0,\r\n    \"Computer\": 1,\r\n    \"Player 2\": 1,\r\n    \"tie\": 2\r\n};\r\n\r\nconst Result = ({winner, boardReset, scoreUpdater, resultReset}) => {\r\n    let message = `${winner} won the game`;\r\n    if (winner === \"tie\")\r\n        message = \"Game tied\";\r\n    scoreUpdater(getIndex[winner] + 1);\r\n    return (\r\n        <ResultContainerStyles>\r\n            {message}\r\n            <CloseButtonStyles \r\n                onClick={\r\n                    () => {\r\n                        boardReset();\r\n                        resultReset();\r\n                    }\r\n                }\r\n            >Close</CloseButtonStyles>\r\n        </ResultContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    boardReset: () => dispatch(resetBoard()),\r\n    scoreUpdater: idx => dispatch(updateScore(idx)),\r\n    resultReset: () => dispatch(updateResult(null))\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Result);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {\r\n    AppContainerStyles,\r\n    CurrentPlayerStyles\r\n} from \"./app.styles\";\r\n\r\n// Components\r\nimport Header from '../../components/header/header.component';\r\nimport Menu from '../../components/menu/menu.component';\r\nimport Board from '../../components/board/board.component';\r\nimport ScoreBoard from '../../components/scoreboard/scoreboard.component';\r\nimport ResetButton from '../../components/reset-button/reset-button.component';\r\nimport Result from '../../components/result/result.component';\r\n\r\n// Functions\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        const {level, currPlayer, player2, result} = this.props;\r\n        return (\r\n            <AppContainerStyles>\r\n                {result !== null && <Result winner={result}/>}\r\n                <Header />\r\n                {\r\n                    level < 2\r\n                    ? <Menu />\r\n                    : <span>\r\n                        <ScoreBoard />\r\n                        <CurrentPlayerStyles>\r\n                            {\r\n                                currPlayer === \"Player 1\" && player2 === \"Computer\"\r\n                                ? \"Your turn\"\r\n                                : `${currPlayer}'s turn`\r\n                            }\r\n                        </CurrentPlayerStyles>\r\n                        <Board />\r\n                        <ResetButton />\r\n                      </span>\r\n                }\r\n            </AppContainerStyles>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({menu, board, score}) => ({\r\n    level: menu.menuLevel,\r\n    currPlayer: board.currentPlayer,\r\n    player2: menu.player2,\r\n    player1Tool: menu.player1Tool,\r\n    playingBoard: board.board,\r\n    result: score.result\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);","import menuTypes from \"./menu.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    player2: null,\r\n    player1Tool: null,\r\n    menuLevel: 0\r\n};\r\n\r\nconst menuReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case menuTypes.SET_NO_OF_PLAYERS:\r\n            return action.payload === 1 \r\n                ? {...state, player2: \"Computer\", menuLevel: 1}\r\n                : {...state, player2: \"Player 2\", menuLevel: 1};\r\n        case menuTypes.SET_PLAYER_1_TOOL:\r\n            return {\r\n                ...state,\r\n                player1Tool: action.payload,\r\n                menuLevel: 2\r\n            };\r\n        case menuTypes.SET_MENU_LEVEL:\r\n            return {\r\n                ...state,\r\n                menuLevel: action.payload\r\n            };\r\n        case menuTypes.RESET_MENU:\r\n            return {\r\n                noOfPlayers: null,\r\n                player2: null,\r\n                player1Tool: null,\r\n                menuLevel: 0\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default menuReducer;","import boardTypes from \"./board.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    currentPlayer: \"Player 1\"\r\n};\r\n\r\nconst boardReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case boardTypes.RESET_BOARD:\r\n            return {\r\n                board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                currentPlayer: \"Player 1\"\r\n            };\r\n        case boardTypes.UPDATE_BOARD: {\r\n            let boardCpy = [...state.board];\r\n            const {pos, val} = action.payload;\r\n            boardCpy[pos] = val;\r\n            return {\r\n                ...state,\r\n                board: [...boardCpy]\r\n            };\r\n        }\r\n        case boardTypes.SET_CURRENT_PLAYER:\r\n            return {\r\n                ...state,\r\n                currentPlayer: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default boardReducer;","import scoreTypes from \"./score.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    scoreArray: [0, 0, 0, 0],\r\n    result: null\r\n};\r\n\r\nconst scoreReducer = (state =INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case scoreTypes.SET_SCORE: {\r\n            let scores = [...state.scoreArray];\r\n            scores[0] += 1;\r\n            scores[action.payload] += 1;\r\n            return {\r\n                ...state,\r\n                scoreArray: [...scores]\r\n            };\r\n        }\r\n        case scoreTypes.RESET_SCORE:\r\n            return {\r\n                ...state,\r\n                scoreArray: [0, 0, 0, 0],\r\n                result: null\r\n            };\r\n        case scoreTypes.UPDATE_RESULT:\r\n            return {\r\n                ...state,\r\n                result: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default scoreReducer;","import {combineReducers} from \"redux\";\r\n\r\n// Reducers\r\nimport menuReducer from \"./menu/menu.reducer\";\r\nimport boardReducer from \"./board/board.reducer\";\r\nimport scoreReducer from \"./score/score.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    menu: menuReducer,\r\n    board: boardReducer,\r\n    score: scoreReducer\r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from \"redux\";\r\n\r\n// Middlewares\r\nimport logger from \"redux-logger\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n// Root reducer\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [thunkMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development')\r\n    middlewares.push(logger);\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Styles\nimport './index.css';\n\n// Components\nimport App from './containers/app/app.container';\nimport {Provider} from 'react-redux';\n\n// Redux Store\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}