{"version":3,"sources":["containers/app/app.styles.jsx","components/header/header.styles.jsx","components/header/header.component.jsx","components/menu/menu.styles.jsx","components/cross/cross.styles.jsx","components/cross/cross.component.jsx","components/circle/circle.styles.jsx","components/circle/circle.component.jsx","components/players-name/players-name.styles.jsx","redux/players/players.types.js","components/players-name/players-name.component.jsx","redux/players/players.actions.js","redux/menu/menu.types.js","components/menu/menu.component.jsx","redux/menu/menu.actions.js","components/board/board.styles.jsx","components/square/square.styles.jsx","components/square/square.component.jsx","redux/board/board.types.js","redux/board/board.actions.js","redux/score/score.types.js","redux/score/score.actions.js","utils.js","components/component-decider/component-decider.component.jsx","components/board/board.component.jsx","components/scoreboard/scoreboard.styles.jsx","components/scoreboard/scoreboard.component.jsx","components/reset-button/reset-button.styles.jsx","components/reset-button/reset-button.component.jsx","components/result/result.styles.jsx","components/result/result.component.jsx","containers/app/app.container.jsx","redux/menu/menu.reducer.js","redux/board/board.reducer.js","redux/score/score.reducer.js","redux/players/players.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["AppContainerStyles","styled","div","CurrentPlayerStyles","span","HeaderTextStyles","Header","MenuContainerStyles","TitleTextStyles","SubMenuStyles","DrawAnimation","keyframes","CrossStyles","svg","Cross","clickEvent","width","height","viewBox","onClick","x1","y1","x2","y2","CircleStyles","Circle","cx","cy","r","PlayersContainerStyles","TitleFieldStyles","LabelFieldStyles","InputFieldStyles","input","playerTypes","SET_PLAYER_1_NAME","SET_PLAYER_2_NAME","RESET_PLAYERS","connect","players","p1Name","player1Name","p2Name","player2Name","dispatch","updateP1","event","type","payload","target","value","updatePlayer1Name","updateP2","updatePlayer2Name","name","onChange","maxLength","autocomplete","menuTypes","SET_NO_OF_PLAYERS","SET_PLAYER_1_TOOL","SET_MENU_LEVEL","RESET_MENU","menu","level","menuLevel","player2","setNoOfPlayers","val","noOfPlayers","changeLevel","setMenuLevel","changePlayerTool","setPlayer1Tool","style","marginTop","cursor","BoardContainerStyles","SquareStyles","Square","boardTypes","RESET_BOARD","UPDATE_BOARD","SET_CURRENT_PLAYER","resetBoard","scoreTypes","SET_SCORE","RESET_SCORE","UPDATE_RESULT","updateResult","calculateResponse","p","COMPUTER","HUMAN","EMPTY","emptyPositionInLineFullOf","player","winningPosition","undefined","defendingPosition","includes","indexOf","sleep","ms","Promise","resolve","setTimeout","detectWinner","lineFullOf","gridIsFull","every","position","playerWon","computerWon","tie","ComponentDecider","winnerChecker","player1Tool","boardCopy","setResult","props","calculatedResult","player2Tool","console","log","handleClick","a","pos","updateBoard","updatePlayer","playingBoard","currPlayer","tool","nextPlayer","response","computerTool","this","React","Component","board","currentPlayer","map","idx","ScoreBoardContainerStyles","TextStyles","score","scores","scoreArray","length","trim","ResetButtonStyles","menuReset","boardReset","scoreReset","playersReset","ResultContainerStyles","CloseButtonStyles","button","getIndex","scoreUpdater","resultReset","winner","dood","messageToPrint","App","nameToPrint","result","INITIAL_STATE","menuReducer","state","action","boardReducer","boardCpy","scoreReducer","playersReducers","persistConfig","key","storage","whitelist","rootReducer","combineReducers","persistReducer","middlewares","thunkMiddleware","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cffae5a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const AppContainerStyles = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const CurrentPlayerStyles = styled.span`\r\n    margin-left: 6.8rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n    font-size: 2rem;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const HeaderTextStyles = styled.span`\r\n    font-family: 'Permanent Marker', cursive;\r\n    font-size: 3.6rem;\r\n    color: rgb(28, 144, 221);\r\n    text-align: center;\r\n`;","import React from 'react';\r\n\r\n// Stlyes\r\nimport {HeaderTextStyles} from './header.styles';\r\n\r\nconst Header = () => (\r\n    <HeaderTextStyles>Tic Tac Toe</HeaderTextStyles>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const MenuContainerStyles = styled.div`\r\n    margin-top: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const TitleTextStyles = styled.span`\r\n    font-family: 'Patrick Hand', cursive;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n`;\r\n\r\nexport const SubMenuStyles = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: 4rem;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    font-size: 6rem;\r\n    cursor: pointer;\r\n`;","import styled, {keyframes} from \"styled-components\";\r\n\r\nconst DrawAnimation = keyframes`\r\n    to {\r\n        stroke-dashoffset: 0;\r\n    }\r\n`;\r\n\r\nexport const CrossStyles = styled.svg`\r\n    stroke-width: 15px;\r\n    fill: none;\r\n    stroke-linecap: round;\r\n\r\n    stroke-dasharray: 1000;\r\n    stroke-dashoffset: 1000;\r\n\r\n    stroke: #bb2b29;\r\n    background-color: #0d1117;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        stroke: #d6302d;\r\n    }\r\n\r\n    line:nth-of-type(1) {\r\n        animation: 1s linear forwards ${DrawAnimation};\r\n    }\r\n    line:nth-of-type(2) {\r\n        animation: 1s linear 0.2s forwards ${DrawAnimation};\r\n    }\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport {CrossStyles} from './cross.styles';\r\n\r\nconst Cross = ({clickEvent}) => (\r\n    <CrossStyles\r\n        width=\"100\" height=\"100\" \r\n        viewBox=\"-50 -50 100 100\" \r\n        onClick={clickEvent}\r\n    >\r\n        <line x1=\"-40\" y1=\"-40\" x2=\"40\" y2=\"40\" />\r\n        <line x1=\"-40\" y1=\"40\" x2=\"40\" y2=\"-40\" />\r\n    </CrossStyles>\r\n);\r\n\r\nexport default Cross;","import styled, {keyframes} from \"styled-components\";\r\n\r\nconst DrawAnimation = keyframes`\r\n    to {\r\n        stroke-dashoffset: 0;\r\n    }\r\n`;\r\n\r\nexport const CircleStyles = styled.svg`\r\n    stroke-width: 15px;\r\n    fill: none;\r\n    stroke-linecap: round;\r\n\r\n    stroke-dasharray: 1000;\r\n    stroke-dashoffset: 1000;\r\n\r\n    stroke: #2ea043;\r\n    background-color: #0d1117;\r\n    border-radius: 10px;\r\n    animation: ${DrawAnimation} 1s linear forwards;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        stroke: #38c251;\r\n    }\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport {CircleStyles} from './circle.styles';\r\n\r\nconst Circle = ({clickEvent}) => (\r\n    <CircleStyles \r\n        width=\"100\" height=\"100\" \r\n        viewBox=\"-50 -50 100 100\" \r\n        onClick={clickEvent}\r\n    >\r\n        <circle cx=\"0\" cy=\"0\" r=\"40\" />\r\n    </CircleStyles>\r\n);\r\n\r\nexport default Circle;","import styled from \"styled-components\";\r\n\r\nexport const PlayersContainerStyles = styled.div`\r\n    display: grid;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TitleFieldStyles = styled.span`\r\n    font-family: 'Patrick Hand';\r\n    text-align: center;\r\n    font-size: 1.8rem;\r\n`;\r\n\r\nexport const LabelFieldStyles = styled.span`\r\n    margin-top: 0.5rem;\r\n    font-family: 'Patrick Hand';\r\n    font-size: 1.4rem;\r\n    text-align: center;\r\n`;\r\n\r\nexport const InputFieldStyles = styled.input`\r\n    margin-top: 0.5rem;\r\n    padding: 0.4rem;\r\n    background-color: #161b22;\r\n    border-radius: 1rem;\r\n    font-size: 1.2rem;\r\n    color: white;\r\n    border: 0.2rem solid rgba(55, 106, 176, 0.5);\r\n    outline: none;\r\n    width: auto;\r\n    font-family: 'Patrick Hand';\r\n\r\n    &:focus {\r\n        border: 0.2rem solid rgb(28, 144, 221);\r\n        border-radius: 1rem;\r\n    }\r\n`;","const playerTypes = {\r\n    SET_PLAYER_1_NAME: \"SET_PLAYER_1_NAME\",\r\n    SET_PLAYER_2_NAME: \"SET_PLAYER_2_NAME\",\r\n    RESET_PLAYERS: \"RESET_PLAYERS\"\r\n};\r\n\r\nexport default playerTypes;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// Styles\r\nimport {\r\n    PlayersContainerStyles,\r\n    TitleFieldStyles,\r\n    LabelFieldStyles,\r\n    InputFieldStyles\r\n} from \"./players-name.styles\";\r\n\r\n// Actions\r\nimport {\r\n    updatePlayer1Name,\r\n    updatePlayer2Name\r\n} from \"../../redux/players/players.actions\";\r\n\r\nconst PlayersNames = ({p1Name, p2Name, updateP1, updateP2}) => {\r\n    return (\r\n        <PlayersContainerStyles>\r\n            <TitleFieldStyles>Players Names</TitleFieldStyles>\r\n            <LabelFieldStyles>Player 1</LabelFieldStyles>\r\n            <InputFieldStyles\r\n                type=\"text\" \r\n                name=\"name1\" \r\n                value={p1Name} \r\n                onChange={updateP1}\r\n                maxLength=\"8\"\r\n                autocomplete=\"off\"\r\n            />\r\n            <LabelFieldStyles>Player 2</LabelFieldStyles>\r\n            <InputFieldStyles\r\n                type=\"text\" \r\n                name=\"name2\" \r\n                value={p2Name} \r\n                onChange={updateP2}\r\n                maxLength=\"8\"\r\n                autocomplete=\"off\"\r\n            />\r\n        </PlayersContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({players}) => ({\r\n    p1Name: players.player1Name,\r\n    p2Name: players.player2Name\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateP1: event => dispatch(updatePlayer1Name(event)),\r\n    updateP2: event => dispatch(updatePlayer2Name(event))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PlayersNames);","import playerTypes from \"./players.types\";\r\n\r\nexport const updatePlayer1Name = event => ({\r\n    type: playerTypes.SET_PLAYER_1_NAME,\r\n    payload: event.target.value\r\n});\r\n\r\nexport const updatePlayer2Name = event => ({\r\n    type: playerTypes.SET_PLAYER_2_NAME,\r\n    payload: event.target.value\r\n});\r\n\r\nexport const resetPlayers = () => ({\r\n    type: playerTypes.RESET_PLAYERS\r\n});","const menuTypes = {\r\n    SET_NO_OF_PLAYERS: \"SET_NO_OF_PLAYERS\",\r\n    SET_PLAYER_1_TOOL: \"SET_PLAYER_1_TOOL\",\r\n    SET_MENU_LEVEL: \"SET_MENU_LEVEL\",\r\n    RESET_MENU: \"RESET_MENU\"\r\n};\r\n\r\nexport default menuTypes;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// Styles\r\nimport {\r\n    MenuContainerStyles,\r\n    TitleTextStyles,\r\n    SubMenuStyles\r\n} from \"./menu.styles\";\r\n\r\n// Components\r\nimport Cross from '../cross/cross.component';\r\nimport Circle from '../circle/circle.component';\r\nimport PlayersNames from '../players-name/players-name.component';\r\n\r\n// Actions\r\nimport {\r\n    noOfPlayers,\r\n    setMenuLevel,\r\n    setPlayer1Tool\r\n} from '../../redux/menu/menu.actions';\r\n\r\nconst Menu = ({\r\n    level, \r\n    setNoOfPlayers, \r\n    changeLevel, \r\n    changePlayerTool,\r\n    player2,\r\n    p1Name\r\n}) => {\r\n    return (\r\n        level === 0 \r\n        ?   <MenuContainerStyles>\r\n                <TitleTextStyles>Number of Players</TitleTextStyles>\r\n                <SubMenuStyles>\r\n                    <span onClick={() => setNoOfPlayers(1)}>1</span>\r\n                    <span onClick={() => setNoOfPlayers(2)}>2</span>\r\n                </SubMenuStyles>\r\n            </MenuContainerStyles>\r\n        :   <MenuContainerStyles>\r\n                {player2 !== \"Computer\" && <PlayersNames />}\r\n                <TitleTextStyles>\r\n                    {\r\n                        player2 === \"Computer\"\r\n                        ? \"You take\"\r\n                        : `${p1Name} takes`\r\n                    }\r\n                </TitleTextStyles>\r\n                <SubMenuStyles style={{marginTop: \"2rem\"}}>\r\n                    <span onClick={() => changePlayerTool(\"cross\")}>\r\n                        <Cross/>\r\n                    </span>\r\n                    <span onClick={() => changePlayerTool(\"circle\")}>\r\n                        <Circle />\r\n                    </span>\r\n                </SubMenuStyles>\r\n                <TitleTextStyles\r\n                    style={{marginTop: \"1rem\", cursor: \"pointer\"}}\r\n                    onClick={() => changeLevel(0)}\r\n                >\r\n                    &#8592; Back\r\n                </TitleTextStyles>\r\n            </MenuContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({menu, players}) => ({\r\n    level: menu.menuLevel,\r\n    player2: menu.player2,\r\n    p1Name: players.player1Name\r\n});\r\n\r\nconst mapDispachToProps = dispatch => ({\r\n    setNoOfPlayers: val => dispatch(noOfPlayers(val)),\r\n    changeLevel: val => dispatch(setMenuLevel(val)),\r\n    changePlayerTool: val => dispatch(setPlayer1Tool(val))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(Menu);","import menuTypes from \"./menu.types\";\r\n\r\nexport const noOfPlayers = val => ({\r\n    type: menuTypes.SET_NO_OF_PLAYERS,\r\n    payload: val\r\n});\r\n\r\nexport const setMenuLevel = val => ({\r\n    type: menuTypes.SET_MENU_LEVEL,\r\n    payload: val\r\n});\r\n\r\nexport const setPlayer1Tool = val => ({\r\n    type: menuTypes.SET_PLAYER_1_TOOL,\r\n    payload: val\r\n});\r\n\r\nexport const resetMenu = () => ({\r\n    type: menuTypes.RESET_MENU\r\n});","import styled from \"styled-components\";\r\n\r\nexport const BoardContainerStyles = styled.div`\r\n    display: grid;\r\n    max-width: 100vw;\r\n    max-height: 100vh;\r\n    grid-column-gap: 10px;\r\n    grid-row-gap: 10px;\r\n    padding: 7px;\r\n    border-radius: 14px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows: repeat(3, 1fr);\r\n    background-color: rgb(28, 120, 182);\r\n\r\n    &:hover {\r\n        background-color: rgb(60, 161, 228);\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const SquareStyles = styled.div`\r\n    width: 4.5rem;\r\n    height: 4.5rem;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    background-color: #0d1117;\r\n    padding: 14px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport {SquareStyles} from \"./square.styles\";\r\n\r\nconst Square = ({clickEvent}) => (\r\n    <SquareStyles onClick={clickEvent}>\r\n    </SquareStyles>\r\n);\r\n\r\nexport default Square;","const boardTypes = {\r\n    RESET_BOARD: 'RESET_BOARD',\r\n    UPDATE_BOARD: 'UPDATE_BOARD',\r\n    SET_CURRENT_PLAYER: 'SET_CURRENT_PLAYER'\r\n};\r\n\r\nexport default boardTypes;","import boardTypes from \"./board.types\";\r\n\r\nexport const resetBoard = () => ({\r\n    type: boardTypes.RESET_BOARD\r\n});\r\n\r\nexport const updateBoard = (pos, val) => ({\r\n    type: boardTypes.UPDATE_BOARD,\r\n    payload: {pos, val}\r\n});\r\n\r\nexport const updatePlayer = val => ({\r\n    type: boardTypes.SET_CURRENT_PLAYER,\r\n    payload: val\r\n});","const scoreTypes = {\r\n    SET_SCORE: \"SET_SCORE\",\r\n    RESET_SCORE: \"RESET_SCORE\",\r\n    UPDATE_RESULT: \"UPDATE_RESULT\"\r\n};\r\n\r\nexport default scoreTypes;","import scoreTypes from \"./score.types\";\r\n\r\nexport const updateScore = val => ({\r\n    type: scoreTypes.SET_SCORE,\r\n    payload: val\r\n});\r\n\r\nexport const resetScore = () => ({\r\n    type: scoreTypes.RESET_SCORE\r\n});\r\n\r\nexport const updateResult = val => ({\r\n    type: scoreTypes.UPDATE_RESULT,\r\n    payload: val\r\n});","export function calculateResponse(p, COMPUTER, HUMAN, EMPTY = 0) {\r\n\r\n    // This function gives back the first empty position (if any) that is in a line\r\n    // that is otherwise full of circles / crosses (depending on the parameter)\r\n    function emptyPositionInLineFullOf(player) {\r\n        if (p[0] === EMPTY && (                   // If the first position is empty,\r\n            (p[1] === player && p[2] === player) ||   // but otherwise the first row is full\r\n            (p[3] === player && p[6] === player) ||   // or the first column is full\r\n            (p[4] === player && p[8] === player)      // or the diagonal line starting from first position is full\r\n        )) return 0;                            // then return the first position\r\n        // because it's a good position to defend / attack\r\n\r\n        if (p[1] === EMPTY && (                   // If the second position is empty\r\n            (p[0] === player && p[2] === player) ||   // but otherwise the first row is full\r\n            (p[4] === player && p[7] === player)      // or the second column is full\r\n        )) return 1;                            // then return the second position\r\n        // because it's a good position to defend / attack\r\n\r\n        if (p[2] === EMPTY && (\r\n            (p[0] === player && p[1] === player) ||\r\n            (p[5] === player && p[8] === player) ||\r\n            (p[4] === player && p[6] === player)\r\n        )) return 2;\r\n\r\n        if (p[3] === EMPTY && (\r\n            (p[4] === player && p[5] === player) ||\r\n            (p[0] === player && p[6] === player)\r\n        )) return 3;\r\n\r\n        if (p[4] === EMPTY && (\r\n            (p[3] === player && p[5] === player) ||\r\n            (p[1] === player && p[7] === player) ||\r\n            (p[0] === player && p[8] === player) ||\r\n            (p[2] === player && p[6] === player)\r\n        )) return 4;\r\n\r\n        if (p[5] === EMPTY && (\r\n            (p[3] === player && p[4] === player) ||\r\n            (p[2] === player && p[8] === player)\r\n        )) return 5;\r\n\r\n        if (p[6] === EMPTY && (\r\n            (p[7] === player && p[8] === player) ||\r\n            (p[0] === player && p[3] === player) ||\r\n            (p[4] === player && p[2] === player)\r\n        )) return 6;\r\n\r\n        if (p[7] === EMPTY && (\r\n            (p[6] === player && p[8] === player) ||\r\n            (p[1] === player && p[4] === player)\r\n        )) return 7;\r\n\r\n        if (p[8] === EMPTY && (\r\n            (p[6] === player && p[7] === player) ||\r\n            (p[2] === player && p[5] === player) ||\r\n            (p[4] === player && p[0] === player)\r\n        )) return 8;\r\n    }\r\n\r\n    // If there's a position the computer can take and win then take it\r\n    const winningPosition = emptyPositionInLineFullOf(COMPUTER);\r\n    if (winningPosition !== undefined)\r\n        return winningPosition;\r\n\r\n    // Otherwise if there's a position the human can take in next turn to win, then take it\r\n    const defendingPosition = emptyPositionInLineFullOf(HUMAN);\r\n    if (defendingPosition !== undefined)\r\n        return defendingPosition;\r\n\r\n    // Otherwise pick random position that's empty\r\n    if (!p.includes(EMPTY))\r\n        return -1;\r\n    return p.indexOf(EMPTY);\r\n    // while (true) {\r\n    //     const randomPosition = Math.floor(Math.random() * 9)\r\n    //     if (p[randomPosition] === EMPTY)\r\n    //         return randomPosition;\r\n    // }\r\n}\r\n\r\nexport function sleep(ms) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n\r\nexport function detectWinner(p, HUMAN, COMPUTER, EMPTY = 0) {\r\n    function lineFullOf(player) {\r\n        if (p[0] === player && p[1] === player && p[2] === player) return true; // First line is full\r\n        if (p[3] === player && p[4] === player && p[5] === player) return true; // Second line is full\r\n        if (p[6] === player && p[7] === player && p[8] === player) return true;\r\n\r\n        if (p[0] === player && p[3] === player && p[6] === player) return true; // First column is full\r\n        if (p[1] === player && p[4] === player && p[7] === player) return true;\r\n        if (p[2] === player && p[5] === player && p[8] === player) return true;\r\n\r\n        if (p[0] === player && p[4] === player && p[8] === player) return true;\r\n        if (p[2] === player && p[4] === player && p[6] === player) return true;\r\n    }\r\n\r\n    function gridIsFull() {\r\n        return p.every(position => position !== EMPTY);\r\n    }\r\n\r\n    const playerWon = lineFullOf(HUMAN);\r\n    if (playerWon !== undefined)\r\n        return HUMAN;\r\n\r\n    const computerWon = lineFullOf(COMPUTER);\r\n    if (computerWon !== undefined)\r\n        return COMPUTER;\r\n\r\n    const tie = gridIsFull();\r\n    if (tie)\r\n        return \"tie\";\r\n    return null;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// Styles\r\n// import \"./component-decider.styles.css\";\r\n\r\n// Components\r\nimport Square from \"../square/square.component\";\r\nimport Circle from \"../circle/circle.component\";\r\nimport Cross from \"../cross/cross.component\";\r\n\r\n// Actions\r\nimport {\r\n    updateBoard,\r\n    updatePlayer\r\n} from \"../../redux/board/board.actions\";\r\nimport {updateResult} from \"../../redux/score/score.actions\";\r\n\r\n// Functions\r\nimport {\r\n    calculateResponse,\r\n    sleep,\r\n    detectWinner\r\n} from \"../../utils\";\r\n\r\nclass ComponentDecider extends React.Component {\r\n    winnerChecker = (player1Tool, boardCopy, player2) => {\r\n        const {setResult} = this.props;\r\n        let calculatedResult = null;\r\n        \r\n        const player2Tool = player1Tool === \"circle\" ? \"cross\" : \"circle\";\r\n        calculatedResult = detectWinner([...boardCopy], player1Tool, player2Tool);\r\n        switch (calculatedResult) {\r\n            case player1Tool:\r\n                calculatedResult = player2 === \"Computer\" ? \"You\" : \"Player 1\";\r\n                break;\r\n            case player2Tool: \r\n                calculatedResult = player2;\r\n                break;\r\n            case \"tie\": \r\n                calculatedResult = \"tie\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setResult(calculatedResult);\r\n        console.log(calculatedResult);\r\n        return calculatedResult;\r\n    }\r\n\r\n    handleClick = async () => {\r\n        const {\r\n            pos,\r\n            updateBoard,\r\n            updatePlayer,\r\n            playingBoard,\r\n            currPlayer,\r\n            player1Tool,\r\n            player2,\r\n            setResult\r\n        } = this.props;\r\n        if (playingBoard[pos] !== 0)\r\n            return;\r\n        let tool;\r\n        if (currPlayer === \"Player 1\")\r\n            tool = player1Tool;\r\n        else\r\n            tool = player1Tool === \"circle\" ? \"cross\" : \"circle\";\r\n        updateBoard(pos, tool);\r\n        let nextPlayer = currPlayer === \"Player 1\" ? player2 : \"Player 1\";\r\n        updatePlayer(nextPlayer);\r\n        let boardCopy =[...playingBoard];\r\n        boardCopy[pos] = tool;\r\n        let temp = this.winnerChecker(player1Tool, [...boardCopy], player2);\r\n        if (temp !== null) return;\r\n        if (nextPlayer === \"Computer\") {\r\n            let computerTool = player1Tool === \"circle\" ? \"cross\" : \"circle\";\r\n            let response = calculateResponse(\r\n                boardCopy, \r\n                computerTool,\r\n                player1Tool\r\n            );\r\n            if (response === -1) {\r\n                setResult(\"tie\");\r\n                return;\r\n            }\r\n            await sleep(200);\r\n            boardCopy[response] = computerTool;\r\n            updateBoard(response, computerTool);\r\n            updatePlayer(\"Player 1\");\r\n            temp = this.winnerChecker(player1Tool, [...boardCopy], player2);\r\n            if (temp !== null) return;\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {val} = this.props;\r\n        switch (val) {\r\n            case \"circle\":\r\n                return <Circle clickEvent={this.handleClick}/>\r\n            case \"cross\":\r\n                return <Cross clickEvent={this.handleClick}/>\r\n            default:\r\n                return <Square clickEvent={this.handleClick}/>\r\n        }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = ({board, menu}) => ({\r\n    currPlayer: board.currentPlayer,\r\n    playingBoard: board.board,\r\n    player1Tool: menu.player1Tool,\r\n    player2: menu.player2\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateBoard: (pos, val) => dispatch(updateBoard(pos, val)),\r\n    updatePlayer: val => dispatch(updatePlayer(val)),\r\n    setResult: val => dispatch(updateResult(val))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ComponentDecider);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {BoardContainerStyles} from './board.styles';\r\n\r\n// Componets\r\nimport ComponentDecider from '../component-decider/component-decider.component';\r\n\r\nconst Board = ({playingBoard}) => {\r\n    return (\r\n        <BoardContainerStyles>\r\n            {\r\n                playingBoard.map(\r\n                    (val, idx) => \r\n                        <ComponentDecider\r\n                            key={idx}\r\n                            val={val}\r\n                            pos={idx}\r\n                        />\r\n                )\r\n            }\r\n        </BoardContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({board}) => ({\r\n    playingBoard: board.board\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Board);","import styled from \"styled-components\";\r\n\r\nexport const ScoreBoardContainerStyles = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-right: 14rem;\r\n`;\r\n\r\nexport const TextStyles = styled.span`\r\n    font-size: 1.4rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {\r\n    ScoreBoardContainerStyles,\r\n    TextStyles\r\n} from \"./scoreboard.styles\";\r\n\r\nconst ScoreBoard = ({player2, scores, p1Name, p2Name}) => {\r\n    return (\r\n        <ScoreBoardContainerStyles>\r\n            <TextStyles>Games: {scores[0]}</TextStyles>\r\n            <TextStyles>\r\n                {\r\n                    player2 === \"Computer\" \r\n                    ? \"You\" \r\n                    : p1Name.length < 1 || p1Name.trim() === \"\"\r\n                    ? \"Player 1\"\r\n                    : p1Name\r\n                }: {scores[1]}\r\n            </TextStyles>\r\n            <TextStyles>\r\n                {\r\n                    player2 === \"Computer\"\r\n                    ? \"Computer\"\r\n                    : p2Name.length < 1 || p2Name.trim() === \"\"\r\n                    ? \"Player 2\"\r\n                    : p2Name\r\n                }: {scores[2]}\r\n            </TextStyles>\r\n            <TextStyles>Tie: {scores[3]}</TextStyles>\r\n        </ScoreBoardContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({menu, score, players}) => ({\r\n    player2: menu.player2,\r\n    scores: score.scoreArray,\r\n    p1Name: players.player1Name,\r\n    p2Name: players.player2Name\r\n});\r\n\r\nexport default connect(mapStateToProps)(ScoreBoard);","import styled from \"styled-components\";\r\n\r\nexport const ResetButtonStyles = styled.div`\r\n    appearance: none;\r\n    border: 1px solid;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n    padding: 5px 16px;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n    margin-left: 14rem;\r\n    margin-top: 0.4rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n    background-color: #da3633;\r\n    border-color: #f85149;\r\n    color: white;\r\n\r\n    &:hover {\r\n        color: #f85149;\r\n        border-color: #30363d;\r\n        background-color: #21262d;\r\n    }\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {ResetButtonStyles} from \"./reset-button.styles\";\r\n\r\n// Actions\r\nimport {resetMenu} from \"../../redux/menu/menu.actions\";\r\nimport {resetBoard} from '../../redux/board/board.actions';\r\nimport {resetScore} from \"../../redux/score/score.actions\";\r\nimport {resetPlayers} from \"../../redux/players/players.actions\";\r\n\r\nconst ResetButton = ({menuReset, boardReset, scoreReset, playersReset}) => (\r\n    <ResetButtonStyles\r\n        onClick={\r\n            () => {\r\n                menuReset();\r\n                boardReset();\r\n                scoreReset();\r\n                playersReset();\r\n            }\r\n        }\r\n    >Reset</ResetButtonStyles>\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    menuReset: () => dispatch(resetMenu()),\r\n    boardReset: () => dispatch(resetBoard()),\r\n    scoreReset: () => dispatch(resetScore()),\r\n    playersReset: () => dispatch(resetPlayers())\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(ResetButton);","import styled from \"styled-components\";\r\n\r\nexport const ResultContainerStyles = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    font-size: 4em;\r\n    font-weight: bold;\r\n    background-color: rgba(0, 0, 0, 0.9);\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nexport const CloseButtonStyles = styled.button`\r\n    appearance: none;\r\n    border: 1px solid;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n    padding: 5px 16px;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n    margin-top: 0.4rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n    background-color: #dfd32c;\r\n    border-color: #dceb0c;\r\n    color: white;\r\n\r\n    &:hover {\r\n        color: #dceb0c;\r\n        border-color: #30363d;\r\n        background-color: #21262d;\r\n    }\r\n`;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// Styles\r\nimport {\r\n    ResultContainerStyles,\r\n    CloseButtonStyles\r\n} from \"./result.styles\";\r\n\r\n// Action\r\nimport {resetBoard} from \"../../redux/board/board.actions\";\r\nimport {updateScore, updateResult} from \"../../redux/score/score.actions\";\r\n\r\nconst getIndex = {\r\n    \"Player 1\": 0,\r\n    \"You\": 0,\r\n    \"Computer\": 1,\r\n    \"Player 2\": 1,\r\n    \"tie\": 2\r\n};\r\n\r\nconst Result = ({winner, boardReset, scoreUpdater, resultReset, p1Name, p2Name}) => {\r\n    const messageToPrint = () => {\r\n        if (winner === \"tie\")\r\n            return \"Game tied\";\r\n        let dood = winner;\r\n        if (winner === \"Player 1\")\r\n            dood = p1Name.length < 1 || p1Name.trim() === \"\" ? \"Player 1\" : p1Name;\r\n        else if (winner === \"Player 2\")\r\n            dood = p2Name.length < 1 || p2Name.trim() === \"\" ? \"Player 2\" : p2Name;\r\n        return `${dood} won the game`\r\n    };\r\n\r\n    scoreUpdater(getIndex[winner] + 1);\r\n    return (\r\n        <ResultContainerStyles>\r\n            {messageToPrint()}\r\n            <CloseButtonStyles \r\n                onClick={\r\n                    () => {\r\n                        boardReset();\r\n                        resultReset();\r\n                    }\r\n                }\r\n            >Close</CloseButtonStyles>\r\n        </ResultContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({players}) => ({\r\n    p1Name: players.player1Name,\r\n    p2Name: players.player2Name\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    boardReset: () => dispatch(resetBoard()),\r\n    scoreUpdater: idx => dispatch(updateScore(idx)),\r\n    resultReset: () => dispatch(updateResult(null))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Result);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {\r\n    AppContainerStyles,\r\n    CurrentPlayerStyles\r\n} from \"./app.styles\";\r\n\r\n// Components\r\nimport Header from '../../components/header/header.component';\r\nimport Menu from '../../components/menu/menu.component';\r\nimport Board from '../../components/board/board.component';\r\nimport ScoreBoard from '../../components/scoreboard/scoreboard.component';\r\nimport ResetButton from '../../components/reset-button/reset-button.component';\r\nimport Result from '../../components/result/result.component';\r\n\r\n// Functions\r\n\r\nclass App extends React.Component {\r\n    nameToPrint = () => {\r\n        const {currPlayer, player2, p1Name, p2Name} = this.props;\r\n        if (currPlayer === \"Player 1\" && player2 === \"Computer\")\r\n            return \"Your\";\r\n        if (currPlayer === \"Player 1\" && player2 === \"Player 2\")\r\n            return p1Name.length < 1 || p1Name.trim() === \"\"\r\n                ? \"Player 1\"\r\n                : p1Name;\r\n        if (currPlayer === \"Player 2\")\r\n            return p2Name.length < 1 || p2Name.trim() === \"\"\r\n                ? \"Player 2\"\r\n                : p2Name;\r\n    }\r\n\r\n    render() {\r\n        const {level, result} = this.props;\r\n        return (\r\n            <AppContainerStyles>\r\n                {result !== null && <Result winner={result}/>}\r\n                <Header />\r\n                {\r\n                    level < 2\r\n                    ? <Menu />\r\n                    : <span>\r\n                        <ScoreBoard />\r\n                        <CurrentPlayerStyles>\r\n                            {`${this.nameToPrint()}'s turn`}\r\n                        </CurrentPlayerStyles>\r\n                        <Board />\r\n                        <ResetButton />\r\n                      </span>\r\n                }\r\n            </AppContainerStyles>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({menu, board, score, players}) => ({\r\n    level: menu.menuLevel,\r\n    currPlayer: board.currentPlayer,\r\n    player2: menu.player2,\r\n    player1Tool: menu.player1Tool,\r\n    playingBoard: board.board,\r\n    result: score.result,\r\n    p1Name: players.player1Name,\r\n    p2Name: players.player2Name\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);","import menuTypes from \"./menu.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    player2: null,\r\n    player1Tool: null,\r\n    menuLevel: 0\r\n};\r\n\r\nconst menuReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case menuTypes.SET_NO_OF_PLAYERS:\r\n            return action.payload === 1 \r\n                ? {...state, player2: \"Computer\", menuLevel: 1}\r\n                : {...state, player2: \"Player 2\", menuLevel: 1};\r\n        case menuTypes.SET_PLAYER_1_TOOL:\r\n            return {\r\n                ...state,\r\n                player1Tool: action.payload,\r\n                menuLevel: 2\r\n            };\r\n        case menuTypes.SET_MENU_LEVEL:\r\n            return {\r\n                ...state,\r\n                menuLevel: action.payload\r\n            };\r\n        case menuTypes.RESET_MENU:\r\n            return {\r\n                noOfPlayers: null,\r\n                player2: null,\r\n                player1Tool: null,\r\n                menuLevel: 0\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default menuReducer;","import boardTypes from \"./board.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    currentPlayer: \"Player 1\"\r\n};\r\n\r\nconst boardReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case boardTypes.RESET_BOARD:\r\n            return {\r\n                board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                currentPlayer: \"Player 1\"\r\n            };\r\n        case boardTypes.UPDATE_BOARD: {\r\n            let boardCpy = [...state.board];\r\n            const {pos, val} = action.payload;\r\n            boardCpy[pos] = val;\r\n            return {\r\n                ...state,\r\n                board: [...boardCpy]\r\n            };\r\n        }\r\n        case boardTypes.SET_CURRENT_PLAYER:\r\n            return {\r\n                ...state,\r\n                currentPlayer: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default boardReducer;","import scoreTypes from \"./score.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    scoreArray: [0, 0, 0, 0],\r\n    result: null\r\n};\r\n\r\nconst scoreReducer = (state =INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case scoreTypes.SET_SCORE: {\r\n            let scores = [...state.scoreArray];\r\n            scores[0] += 1;\r\n            scores[action.payload] += 1;\r\n            return {\r\n                ...state,\r\n                scoreArray: [...scores]\r\n            };\r\n        }\r\n        case scoreTypes.RESET_SCORE:\r\n            return {\r\n                ...state,\r\n                scoreArray: [0, 0, 0, 0],\r\n                result: null\r\n            };\r\n        case scoreTypes.UPDATE_RESULT:\r\n            return {\r\n                ...state,\r\n                result: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default scoreReducer;","import playerTypes from \"./players.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    player1Name: \"Player 1\",\r\n    player2Name: \"Player 2\"\r\n};\r\n\r\nconst playersReducers = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case playerTypes.RESET_PLAYERS:\r\n            return {\r\n                player1Name: \"Player 1\",\r\n                player2Name: \"Player 2\"\r\n            };\r\n        case playerTypes.SET_PLAYER_1_NAME:\r\n            return {\r\n                ...state,\r\n                player1Name: action.payload\r\n            };\r\n        case playerTypes.SET_PLAYER_2_NAME:\r\n            return {\r\n                ...state,\r\n                player2Name: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default playersReducers;","import {combineReducers} from \"redux\";\r\nimport {persistReducer} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\n// Reducers\r\nimport menuReducer from \"./menu/menu.reducer\";\r\nimport boardReducer from \"./board/board.reducer\";\r\nimport scoreReducer from \"./score/score.reducer\";\r\nimport playersReducers from \"./players/players.reducer\";\r\n\r\n// Persist Configuration\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['menu', 'board', 'score', 'players']\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    menu: menuReducer,\r\n    board: boardReducer,\r\n    score: scoreReducer,\r\n    players: playersReducers\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import {createStore, applyMiddleware} from \"redux\";\r\nimport {persistStore} from \"redux-persist\";\r\n\r\n// Middlewares\r\nimport logger from \"redux-logger\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n// Root reducer\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [thunkMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development')\r\n    middlewares.push(logger);\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Styles\nimport './index.css';\n\n// Components\nimport App from './containers/app/app.container';\nimport {Provider} from 'react-redux';\nimport {PersistGate} from 'redux-persist/integration/react';\n\n// Redux Store\nimport {\n  store,\n  persistor\n} from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}