{"version":3,"sources":["Pages/Home/home.styles.jsx","components/header/header.styles.jsx","components/header/header.component.jsx","components/menu/menu.styles.jsx","components/cross/cross.styles.jsx","components/cross/cross.component.jsx","components/circle/circle.styles.jsx","components/circle/circle.component.jsx","components/players-name/players-name.styles.jsx","redux/players/players.types.js","components/players-name/players-name.component.jsx","redux/players/players.actions.js","redux/menu/menu.types.js","components/menu/menu.component.jsx","redux/menu/menu.actions.js","components/board/board.styles.jsx","components/square/square.styles.jsx","components/square/square.component.jsx","redux/board/board.types.js","redux/board/board.actions.js","redux/score/score.types.js","redux/score/score.actions.js","redux/multiplayer/multiplayer.types.js","redux/multiplayer/multiplayer.actions.js","utils.js","components/component-decider/component-decider.component.jsx","components/board/board.component.jsx","components/scoreboard/scoreboard.styles.jsx","components/scoreboard/scoreboard.component.jsx","components/reset-button/reset-button.styles.jsx","components/reset-button/reset-button.component.jsx","components/result/result.styles.jsx","components/result/result.component.jsx","Pages/Home/home.page.jsx","Pages/Multiplayer/Multiplayer.styles.jsx","Pages/Multiplayer/Multiplayer.page.jsx","Pages/Room/Room.styles.jsx","components/result2/result2.styles.jsx","components/result2/result2.component.jsx","assets/Loader.svg","Pages/Room/Room.page.jsx","containers/app/app.container.jsx","redux/menu/menu.reducer.js","redux/board/board.reducer.js","redux/score/score.reducer.js","redux/players/players.reducer.js","redux/multiplayer/multiplayer.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["AppContainerStyles","styled","div","CurrentPlayerStyles","span","HeaderTextStyles","Header","history","useHistory","onClick","push","MenuContainerStyles","TitleTextStyles","SubMenuStyles","PlayOnline","DrawAnimation","keyframes","CrossStyles","svg","Cross","clickEvent","width","height","viewBox","x1","y1","x2","y2","CircleStyles","Circle","cx","cy","r","PlayersContainerStyles","TitleFieldStyles","LabelFieldStyles","InputFieldStyles","input","playerTypes","SET_PLAYER_1_NAME","SET_PLAYER_2_NAME","RESET_PLAYERS","connect","players","p1Name","player1Name","p2Name","player2Name","dispatch","updateP1","event","type","payload","target","value","updatePlayer1Name","updateP2","updatePlayer2Name","name","onChange","maxLength","autocomplete","menuTypes","SET_NO_OF_PLAYERS","SET_PLAYER_1_TOOL","SET_MENU_LEVEL","RESET_MENU","menu","level","menuLevel","player2","setNoOfPlayers","val","noOfPlayers","changeLevel","setMenuLevel","changePlayerTool","setPlayer1Tool","style","cursor","marginTop","BoardContainerStyles","SquareStyles","Square","boardTypes","RESET_BOARD","UPDATE_BOARD","SET_CURRENT_PLAYER","resetBoard","scoreTypes","SET_SCORE","RESET_SCORE","UPDATE_RESULT","updateResult","multiplayerTypes","SET_CURRENT_NAME","SET_CURRENT_ID","SET_PLAYER_2","SET_WEAPON","SET_CHANCE","RESET_MULTIPLAYER","SET_ROOM_ID","SET_RESULT","UPDATE_STATE","NEW_GAME","updateBoard","pos","setChance","setResult","result","calculateResponse","p","COMPUTER","HUMAN","EMPTY","emptyPositionInLineFullOf","player","winningPosition","undefined","defendingPosition","includes","indexOf","sleep","ms","Promise","resolve","setTimeout","detectWinner","lineFullOf","gridIsFull","every","position","playerWon","computerWon","tie","playSound","audio","document","getElementById","console","log","currentTime","volume","play","ComponentDecider","winnerChecker","player1Tool","boardCopy","props","calculatedResult","player2Tool","handleClick","a","isMultiplayer","updatePlayer","playingBoard","currPlayer","tool","nextPlayer","response","computerTool","board","weapon","updBord","isChance","roomId","socket","emit","sr","this","React","Component","multiplayer","currentPlayer","res","playingBoard2","boardToUse","map","idx","ScoreBoardContainerStyles","TextStyles","score","scores","scoreArray","length","trim","ResetButtonStyles","menuReset","boardReset","scoreReset","playersReset","ResultContainerStyles","CloseButtonStyles","button","getIndex","scoreUpdater","resultReset","winner","dood","messageToPrint","Home","nameToPrint","commonButtonStyles","css","MultiplayerContainerStyles","MenuFormStyles","form","RoomTitleStyles","RoomStyles","JoinStyles","JoinButtonStyles","CreateButtonStyles","Multiplayer","handleChange","setState","handleRoom","preventDefault","state","window","alert","test","match","url","onSubmit","placeholder","RoomContainerStyles","PlayerStyles","LabelStyles","PlayerNameStyles","UpdateButtonStyles","disabled","_circle","newGame","message","left","_excluded","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLoader","_ref","svgRef","title","titleId","xmlns","xmlnsXlink","margin","background","display","shapeRendering","preserveAspectRatio","ref","id","fill","stroke","strokeWidth","strokeDasharray","attributeName","repeatCount","dur","values","keyTimes","ForwardRef","Room","handleNameChange","setName","handleNameUpdate","currName","connected","playerLeft","setRoomId","params","io","on","setId","setWeapon","setP2","sockId","setBoard","rmId","dataToSend","playerData","stateObj","updateState","reset","disconnect","color","marginLeft","marginRight","readOnly","setCurrName","setCurrId","setPlayer2","obj","App","basename","exact","path","component","INITIAL_STATE","menuReducer","action","boardReducer","boardCpy","scoreReducer","playersReducers","currId","multiplayerReducer","rootReducer","combineReducers","middlewares","thunkMiddleware","store","createStore","applyMiddleware","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cb401fad.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const AppContainerStyles = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const CurrentPlayerStyles = styled.span`\r\n    margin-left: 6.8rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n    font-size: 2rem;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const HeaderTextStyles = styled.span`\r\n    font-family: 'Permanent Marker', cursive;\r\n    font-size: 3.6rem;\r\n    color: rgb(28, 144, 221);\r\n    text-align: center;\r\n    cursor: pointer;\r\n`;","import React from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n// Stlyes\r\nimport {HeaderTextStyles} from './header.styles';\r\n\r\nconst Header = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <HeaderTextStyles onClick={() => history.push(\"/\")}>\r\n            Tic Tac Toe\r\n        </HeaderTextStyles>\r\n    );\r\n};\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const MenuContainerStyles = styled.div`\r\n    margin-top: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const TitleTextStyles = styled.span`\r\n    font-family: 'Patrick Hand', cursive;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n`;\r\n\r\nexport const SubMenuStyles = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: 4rem;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    font-size: 6rem;\r\n`;\r\n\r\nexport const PlayOnline = styled.div`\r\n    cursor: pointer;\r\n    margin-top: 1rem;\r\n    margin-left: 0.5rem;\r\n    background-color: #238636;\r\n    font-size: 1.8rem;\r\n    padding: 0.4rem;\r\n    align-self: center;\r\n    border-radius: 2rem;\r\n`;","import styled, {keyframes} from \"styled-components\";\r\n\r\nconst DrawAnimation = keyframes`\r\n    to {\r\n        stroke-dashoffset: 0;\r\n    }\r\n`;\r\n\r\nexport const CrossStyles = styled.svg`\r\n    stroke-width: 15px;\r\n    fill: none;\r\n    stroke-linecap: round;\r\n\r\n    stroke-dasharray: 1000;\r\n    stroke-dashoffset: 1000;\r\n\r\n    stroke: #bb2b29;\r\n    background-color: #0d1117;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        stroke: #d6302d;\r\n    }\r\n\r\n    line:nth-of-type(1) {\r\n        animation: 1s linear forwards ${DrawAnimation};\r\n    }\r\n    line:nth-of-type(2) {\r\n        animation: 1s linear 0.2s forwards ${DrawAnimation};\r\n    }\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport {CrossStyles} from './cross.styles';\r\n\r\nconst Cross = ({clickEvent}) => (\r\n    <CrossStyles\r\n        width=\"100\" height=\"100\" \r\n        viewBox=\"-50 -50 100 100\" \r\n        onClick={clickEvent}\r\n    >\r\n        <line x1=\"-40\" y1=\"-40\" x2=\"40\" y2=\"40\" />\r\n        <line x1=\"-40\" y1=\"40\" x2=\"40\" y2=\"-40\" />\r\n    </CrossStyles>\r\n);\r\n\r\nexport default Cross;","import styled, {keyframes} from \"styled-components\";\r\n\r\nconst DrawAnimation = keyframes`\r\n    to {\r\n        stroke-dashoffset: 0;\r\n    }\r\n`;\r\n\r\nexport const CircleStyles = styled.svg`\r\n    stroke-width: 15px;\r\n    fill: none;\r\n    stroke-linecap: round;\r\n\r\n    stroke-dasharray: 1000;\r\n    stroke-dashoffset: 1000;\r\n\r\n    stroke: #2ea043;\r\n    background-color: #0d1117;\r\n    border-radius: 10px;\r\n    animation: ${DrawAnimation} 1s linear forwards;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        stroke: #38c251;\r\n    }\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport {CircleStyles} from './circle.styles';\r\n\r\nconst Circle = ({clickEvent}) => (\r\n    <CircleStyles \r\n        width=\"100\" height=\"100\" \r\n        viewBox=\"-50 -50 100 100\" \r\n        onClick={clickEvent}\r\n    >\r\n        <circle cx=\"0\" cy=\"0\" r=\"40\" />\r\n    </CircleStyles>\r\n);\r\n\r\nexport default Circle;","import styled from \"styled-components\";\r\n\r\nexport const PlayersContainerStyles = styled.div`\r\n    display: grid;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TitleFieldStyles = styled.span`\r\n    font-family: 'Patrick Hand';\r\n    text-align: center;\r\n    font-size: 1.8rem;\r\n`;\r\n\r\nexport const LabelFieldStyles = styled.span`\r\n    margin-top: 0.5rem;\r\n    font-family: 'Patrick Hand';\r\n    font-size: 1.4rem;\r\n    text-align: center;\r\n`;\r\n\r\nexport const InputFieldStyles = styled.input`\r\n    margin-top: 0.5rem;\r\n    padding: 0.4rem;\r\n    background-color: #161b22;\r\n    border-radius: 1rem;\r\n    font-size: 1.2rem;\r\n    color: white;\r\n    border: 0.2rem solid rgba(55, 106, 176, 0.5);\r\n    outline: none;\r\n    width: auto;\r\n    font-family: 'Patrick Hand';\r\n\r\n    &:focus {\r\n        border: 0.2rem solid rgb(28, 144, 221);\r\n        border-radius: 1rem;\r\n    }\r\n`;","const playerTypes = {\r\n    SET_PLAYER_1_NAME: \"SET_PLAYER_1_NAME\",\r\n    SET_PLAYER_2_NAME: \"SET_PLAYER_2_NAME\",\r\n    RESET_PLAYERS: \"RESET_PLAYERS\"\r\n};\r\n\r\nexport default playerTypes;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// Styles\r\nimport {\r\n    PlayersContainerStyles,\r\n    TitleFieldStyles,\r\n    LabelFieldStyles,\r\n    InputFieldStyles\r\n} from \"./players-name.styles\";\r\n\r\n// Actions\r\nimport {\r\n    updatePlayer1Name,\r\n    updatePlayer2Name\r\n} from \"../../redux/players/players.actions\";\r\n\r\nconst PlayersNames = ({p1Name, p2Name, updateP1, updateP2}) => {\r\n    return (\r\n        <PlayersContainerStyles>\r\n            <TitleFieldStyles>Players Names</TitleFieldStyles>\r\n            <LabelFieldStyles>Player 1</LabelFieldStyles>\r\n            <InputFieldStyles\r\n                type=\"text\" \r\n                name=\"name1\" \r\n                value={p1Name} \r\n                onChange={updateP1}\r\n                maxLength=\"8\"\r\n                autocomplete=\"off\"\r\n            />\r\n            <LabelFieldStyles>Player 2</LabelFieldStyles>\r\n            <InputFieldStyles\r\n                type=\"text\" \r\n                name=\"name2\" \r\n                value={p2Name} \r\n                onChange={updateP2}\r\n                maxLength=\"8\"\r\n                autocomplete=\"off\"\r\n            />\r\n        </PlayersContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({players}) => ({\r\n    p1Name: players.player1Name,\r\n    p2Name: players.player2Name\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateP1: event => dispatch(updatePlayer1Name(event)),\r\n    updateP2: event => dispatch(updatePlayer2Name(event))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PlayersNames);","import playerTypes from \"./players.types\";\r\n\r\nexport const updatePlayer1Name = event => ({\r\n    type: playerTypes.SET_PLAYER_1_NAME,\r\n    payload: event.target.value\r\n});\r\n\r\nexport const updatePlayer2Name = event => ({\r\n    type: playerTypes.SET_PLAYER_2_NAME,\r\n    payload: event.target.value\r\n});\r\n\r\nexport const resetPlayers = () => ({\r\n    type: playerTypes.RESET_PLAYERS\r\n});","const menuTypes = {\r\n    SET_NO_OF_PLAYERS: \"SET_NO_OF_PLAYERS\",\r\n    SET_PLAYER_1_TOOL: \"SET_PLAYER_1_TOOL\",\r\n    SET_MENU_LEVEL: \"SET_MENU_LEVEL\",\r\n    RESET_MENU: \"RESET_MENU\"\r\n};\r\n\r\nexport default menuTypes;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Styles\r\nimport {\r\n    MenuContainerStyles,\r\n    TitleTextStyles,\r\n    SubMenuStyles,\r\n    PlayOnline\r\n} from \"./menu.styles\";\r\n\r\n// Components\r\nimport Cross from '../cross/cross.component';\r\nimport Circle from '../circle/circle.component';\r\nimport PlayersNames from '../players-name/players-name.component';\r\n\r\n// Actions\r\nimport {\r\n    noOfPlayers,\r\n    setMenuLevel,\r\n    setPlayer1Tool\r\n} from '../../redux/menu/menu.actions';\r\n\r\nconst Menu = ({\r\n    level, \r\n    setNoOfPlayers, \r\n    changeLevel, \r\n    changePlayerTool,\r\n    player2,\r\n    p1Name,\r\n}) => {\r\n    const history = useHistory();\r\n    return (\r\n        level === 0 \r\n        ?   <MenuContainerStyles>\r\n                <TitleTextStyles>Number of Players</TitleTextStyles>\r\n                <SubMenuStyles>\r\n                    <span style={{cursor: \"pointer\"}} onClick={() => setNoOfPlayers(1)}>1</span>\r\n                    <span style={{cursor: \"pointer\"}} onClick={() => setNoOfPlayers(2)}>2</span>\r\n                </SubMenuStyles>\r\n                <PlayOnline\r\n                    onClick={() => history.push(\"/multiplayer\")}\r\n                >Play Online</PlayOnline>\r\n            </MenuContainerStyles>\r\n        :   <MenuContainerStyles>\r\n                {player2 !== \"Computer\" && <PlayersNames />}\r\n                <TitleTextStyles>\r\n                    {\r\n                        player2 === \"Computer\"\r\n                        ? \"You take\"\r\n                        : `${p1Name} takes`\r\n                    }\r\n                </TitleTextStyles>\r\n                <SubMenuStyles style={{marginTop: \"2rem\"}}>\r\n                    <span onClick={() => changePlayerTool(\"cross\")}>\r\n                        <Cross/>\r\n                    </span>\r\n                    <span onClick={() => changePlayerTool(\"circle\")}>\r\n                        <Circle />\r\n                    </span>\r\n                </SubMenuStyles>\r\n                <TitleTextStyles\r\n                    style={{marginTop: \"1rem\", cursor: \"pointer\"}}\r\n                    onClick={() => changeLevel(0)}\r\n                >\r\n                    &#8592; Back\r\n                </TitleTextStyles>\r\n            </MenuContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({menu, players}) => ({\r\n    level: menu.menuLevel,\r\n    player2: menu.player2,\r\n    p1Name: players.player1Name\r\n});\r\n\r\nconst mapDispachToProps = dispatch => ({\r\n    setNoOfPlayers: val => dispatch(noOfPlayers(val)),\r\n    changeLevel: val => dispatch(setMenuLevel(val)),\r\n    changePlayerTool: val => dispatch(setPlayer1Tool(val))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(Menu);","import menuTypes from \"./menu.types\";\r\n\r\nexport const noOfPlayers = val => ({\r\n    type: menuTypes.SET_NO_OF_PLAYERS,\r\n    payload: val\r\n});\r\n\r\nexport const setMenuLevel = val => ({\r\n    type: menuTypes.SET_MENU_LEVEL,\r\n    payload: val\r\n});\r\n\r\nexport const setPlayer1Tool = val => ({\r\n    type: menuTypes.SET_PLAYER_1_TOOL,\r\n    payload: val\r\n});\r\n\r\nexport const resetMenu = () => ({\r\n    type: menuTypes.RESET_MENU\r\n});","import styled from \"styled-components\";\r\n\r\nexport const BoardContainerStyles = styled.div`\r\n    display: grid;\r\n    max-width: 100vw;\r\n    max-height: 100vh;\r\n    grid-column-gap: 10px;\r\n    grid-row-gap: 10px;\r\n    padding: 7px;\r\n    border-radius: 14px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows: repeat(3, 1fr);\r\n    background-color: rgb(28, 120, 182);\r\n\r\n    &:hover {\r\n        background-color: rgb(60, 161, 228);\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const SquareStyles = styled.div`\r\n    width: 4.5rem;\r\n    height: 4.5rem;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    background-color: #0d1117;\r\n    padding: 14px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport {SquareStyles} from \"./square.styles\";\r\n\r\nconst Square = ({clickEvent}) => (\r\n    <SquareStyles onClick={clickEvent}>\r\n    </SquareStyles>\r\n);\r\n\r\nexport default Square;","const boardTypes = {\r\n    RESET_BOARD: 'RESET_BOARD',\r\n    UPDATE_BOARD: 'UPDATE_BOARD',\r\n    SET_CURRENT_PLAYER: 'SET_CURRENT_PLAYER'\r\n};\r\n\r\nexport default boardTypes;","import boardTypes from \"./board.types\";\r\n\r\nexport const resetBoard = () => ({\r\n    type: boardTypes.RESET_BOARD\r\n});\r\n\r\nexport const updateBoard = (pos, val) => ({\r\n    type: boardTypes.UPDATE_BOARD,\r\n    payload: {pos, val}\r\n});\r\n\r\nexport const updatePlayer = val => ({\r\n    type: boardTypes.SET_CURRENT_PLAYER,\r\n    payload: val\r\n});","const scoreTypes = {\r\n    SET_SCORE: \"SET_SCORE\",\r\n    RESET_SCORE: \"RESET_SCORE\",\r\n    UPDATE_RESULT: \"UPDATE_RESULT\"\r\n};\r\n\r\nexport default scoreTypes;","import scoreTypes from \"./score.types\";\r\n\r\nexport const updateScore = val => ({\r\n    type: scoreTypes.SET_SCORE,\r\n    payload: val\r\n});\r\n\r\nexport const resetScore = () => ({\r\n    type: scoreTypes.RESET_SCORE\r\n});\r\n\r\nexport const updateResult = val => ({\r\n    type: scoreTypes.UPDATE_RESULT,\r\n    payload: val\r\n});","const multiplayerTypes = {\r\n    SET_CURRENT_NAME: \"SET_CURRENT_NAME\",\r\n    SET_CURRENT_ID: \"SET_CURRENT_ID\",\r\n    SET_PLAYER_2: \"SET_PLAYER_2\",\r\n    SET_WEAPON: \"SET_WEAPON\",\r\n    UPDATE_BOARD: \"UPDATE_BOARD\",\r\n    SET_CHANCE: \"SET_CHANCE\",\r\n    RESET_MULTIPLAYER: \"RESET_MULTIPLAYER\",\r\n    SET_ROOM_ID: \"SET_ROOM_ID\",\r\n    SET_RESULT: \"SET_RESULT\",\r\n    UPDATE_STATE: \"UPDATE_STATE\",\r\n    NEW_GAME: \"NEW_GAME\"\r\n};\r\n\r\nexport default multiplayerTypes;","import multiplayerTypes from \"./multiplayer.types\";\r\n\r\nexport const setCurrName = name => ({\r\n    type: multiplayerTypes.SET_CURRENT_NAME,\r\n    payload: name\r\n});\r\n\r\nexport const setCurrId = id => ({\r\n    type: multiplayerTypes.SET_CURRENT_ID,\r\n    payload: id\r\n});\r\n\r\nexport const setPlayer2 = name => ({\r\n    type: multiplayerTypes.SET_PLAYER_2,\r\n    payload: name\r\n});\r\n\r\nexport const setWeapon = weapon => ({\r\n    type: multiplayerTypes.SET_WEAPON,\r\n    payload: weapon\r\n});\r\n\r\nexport const updateBoard = (pos, val) => ({\r\n    type: multiplayerTypes.UPDATE_BOARD,\r\n    payload: {pos, val}\r\n});\r\n\r\nexport const setChance = () => ({\r\n    type: multiplayerTypes.SET_CHANCE\r\n});\r\n\r\nexport const resetMultiplayer = () => ({\r\n    type: multiplayerTypes.RESET_MULTIPLAYER\r\n});\r\n\r\nexport const setRoomId = id => ({\r\n    type: multiplayerTypes.SET_ROOM_ID,\r\n    payload: id\r\n});\r\n\r\nexport const setResult = result => ({\r\n    type: multiplayerTypes.SET_RESULT,\r\n    payload: result\r\n});\r\n\r\nexport const updateState = obj => ({\r\n    type: multiplayerTypes.UPDATE_STATE,\r\n    payload: {...obj}\r\n});\r\n\r\nexport const newGame = () => ({\r\n    type: multiplayerTypes.NEW_GAME\r\n});","export function calculateResponse(p, COMPUTER, HUMAN, EMPTY = 0) {\r\n\r\n    // This function gives back the first empty position (if any) that is in a line\r\n    // that is otherwise full of circles / crosses (depending on the parameter)\r\n    function emptyPositionInLineFullOf(player) {\r\n        if (p[0] === EMPTY && (                   // If the first position is empty,\r\n            (p[1] === player && p[2] === player) ||   // but otherwise the first row is full\r\n            (p[3] === player && p[6] === player) ||   // or the first column is full\r\n            (p[4] === player && p[8] === player)      // or the diagonal line starting from first position is full\r\n        )) return 0;                            // then return the first position\r\n        // because it's a good position to defend / attack\r\n\r\n        if (p[1] === EMPTY && (                   // If the second position is empty\r\n            (p[0] === player && p[2] === player) ||   // but otherwise the first row is full\r\n            (p[4] === player && p[7] === player)      // or the second column is full\r\n        )) return 1;                            // then return the second position\r\n        // because it's a good position to defend / attack\r\n\r\n        if (p[2] === EMPTY && (\r\n            (p[0] === player && p[1] === player) ||\r\n            (p[5] === player && p[8] === player) ||\r\n            (p[4] === player && p[6] === player)\r\n        )) return 2;\r\n\r\n        if (p[3] === EMPTY && (\r\n            (p[4] === player && p[5] === player) ||\r\n            (p[0] === player && p[6] === player)\r\n        )) return 3;\r\n\r\n        if (p[4] === EMPTY && (\r\n            (p[3] === player && p[5] === player) ||\r\n            (p[1] === player && p[7] === player) ||\r\n            (p[0] === player && p[8] === player) ||\r\n            (p[2] === player && p[6] === player)\r\n        )) return 4;\r\n\r\n        if (p[5] === EMPTY && (\r\n            (p[3] === player && p[4] === player) ||\r\n            (p[2] === player && p[8] === player)\r\n        )) return 5;\r\n\r\n        if (p[6] === EMPTY && (\r\n            (p[7] === player && p[8] === player) ||\r\n            (p[0] === player && p[3] === player) ||\r\n            (p[4] === player && p[2] === player)\r\n        )) return 6;\r\n\r\n        if (p[7] === EMPTY && (\r\n            (p[6] === player && p[8] === player) ||\r\n            (p[1] === player && p[4] === player)\r\n        )) return 7;\r\n\r\n        if (p[8] === EMPTY && (\r\n            (p[6] === player && p[7] === player) ||\r\n            (p[2] === player && p[5] === player) ||\r\n            (p[4] === player && p[0] === player)\r\n        )) return 8;\r\n    }\r\n\r\n    // If there's a position the computer can take and win then take it\r\n    const winningPosition = emptyPositionInLineFullOf(COMPUTER);\r\n    if (winningPosition !== undefined)\r\n        return winningPosition;\r\n\r\n    // Otherwise if there's a position the human can take in next turn to win, then take it\r\n    const defendingPosition = emptyPositionInLineFullOf(HUMAN);\r\n    if (defendingPosition !== undefined)\r\n        return defendingPosition;\r\n\r\n    // Otherwise pick random position that's empty\r\n    if (!p.includes(EMPTY))\r\n        return -1;\r\n    return p.indexOf(EMPTY);\r\n    // while (true) {\r\n    //     const randomPosition = Math.floor(Math.random() * 9)\r\n    //     if (p[randomPosition] === EMPTY)\r\n    //         return randomPosition;\r\n    // }\r\n}\r\n\r\nexport function sleep(ms) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n\r\nexport function detectWinner(p, HUMAN, COMPUTER, EMPTY = 0) {\r\n    function lineFullOf(player) {\r\n        if (p[0] === player && p[1] === player && p[2] === player) return true; // First line is full\r\n        if (p[3] === player && p[4] === player && p[5] === player) return true; // Second line is full\r\n        if (p[6] === player && p[7] === player && p[8] === player) return true;\r\n\r\n        if (p[0] === player && p[3] === player && p[6] === player) return true; // First column is full\r\n        if (p[1] === player && p[4] === player && p[7] === player) return true;\r\n        if (p[2] === player && p[5] === player && p[8] === player) return true;\r\n\r\n        if (p[0] === player && p[4] === player && p[8] === player) return true;\r\n        if (p[2] === player && p[4] === player && p[6] === player) return true;\r\n    }\r\n\r\n    function gridIsFull() {\r\n        return p.every(position => position !== EMPTY);\r\n    }\r\n\r\n    const playerWon = lineFullOf(HUMAN);\r\n    if (playerWon !== undefined)\r\n        return HUMAN;\r\n\r\n    const computerWon = lineFullOf(COMPUTER);\r\n    if (computerWon !== undefined)\r\n        return COMPUTER;\r\n\r\n    const tie = gridIsFull();\r\n    if (tie)\r\n        return \"tie\";\r\n    return null;\r\n}\r\n\r\nexport const playSound = pos => {\r\n    let audio = document.getElementById(pos);\r\n    console.log(audio);\r\n    audio.currentTime = 0;\r\n    audio.volume = 1;\r\n    audio.play();\r\n};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// Styles\r\n// import \"./component-decider.styles.css\";\r\n\r\n// Components\r\nimport Square from \"../square/square.component\";\r\nimport Circle from \"../circle/circle.component\";\r\nimport Cross from \"../cross/cross.component\";\r\n\r\n// Actions\r\nimport {\r\n    updateBoard,\r\n    updatePlayer\r\n} from \"../../redux/board/board.actions\";\r\nimport {updateResult} from \"../../redux/score/score.actions\";\r\nimport {\r\n    updateBoard as updBord,\r\n    setChance,\r\n    setResult as sr\r\n} from \"../../redux/multiplayer/multiplayer.actions\";\r\n\r\n// Functions\r\nimport {\r\n    calculateResponse,\r\n    sleep,\r\n    detectWinner\r\n} from \"../../utils\";\r\n\r\nclass ComponentDecider extends React.Component {\r\n    winnerChecker = (player1Tool, boardCopy, player2) => {\r\n        const {setResult} = this.props;\r\n        let calculatedResult = null;\r\n        \r\n        const player2Tool = player1Tool === \"circle\" ? \"cross\" : \"circle\";\r\n        calculatedResult = detectWinner([...boardCopy], player1Tool, player2Tool);\r\n        switch (calculatedResult) {\r\n            case player1Tool:\r\n                calculatedResult = player2 === \"Computer\" ? \"You\" : \"Player 1\";\r\n                break;\r\n            case player2Tool: \r\n                calculatedResult = player2;\r\n                break;\r\n            case \"tie\": \r\n                calculatedResult = \"tie\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setResult(calculatedResult);\r\n        return calculatedResult;\r\n    }\r\n\r\n    handleClick = async () => {\r\n        const {isMultiplayer} = this.props;\r\n        if (isMultiplayer===false) {\r\n            const {\r\n                pos,\r\n                updateBoard,\r\n                updatePlayer,\r\n                playingBoard,\r\n                currPlayer,\r\n                player1Tool,\r\n                player2,\r\n                setResult\r\n            } = this.props;\r\n            if (playingBoard[pos] !== 0)\r\n            return;\r\n            let tool;\r\n            if (currPlayer === \"Player 1\")\r\n            tool = player1Tool;\r\n            else\r\n            tool = player1Tool === \"circle\" ? \"cross\" : \"circle\";\r\n            updateBoard(pos, tool);\r\n            let nextPlayer = currPlayer === \"Player 1\" ? player2 : \"Player 1\";\r\n            updatePlayer(nextPlayer);\r\n            let boardCopy =[...playingBoard];\r\n            boardCopy[pos] = tool;\r\n            let temp = this.winnerChecker(player1Tool, [...boardCopy], player2);\r\n            if (temp !== null) return;\r\n            if (nextPlayer === \"Computer\") {\r\n                let computerTool = player1Tool === \"circle\" ? \"cross\" : \"circle\";\r\n                let response = calculateResponse(\r\n                    boardCopy, \r\n                    computerTool,\r\n                    player1Tool\r\n                );\r\n                if (response === -1) {\r\n                    setResult(\"tie\");\r\n                    return;\r\n                }\r\n                await sleep(200);\r\n                boardCopy[response] = computerTool;\r\n                updateBoard(response, computerTool);\r\n                updatePlayer(\"Player 1\");\r\n                temp = this.winnerChecker(player1Tool, [...boardCopy], player2);\r\n                if (temp !== null) return;\r\n            }\r\n            return;\r\n        }\r\n        const {\r\n            board,\r\n            pos,\r\n            weapon,\r\n            updBord,\r\n            isChance,\r\n            setChance,\r\n            roomId\r\n        } = this.props;\r\n        if (!isChance) return;\r\n        if (board[pos] !== 0) return;\r\n        let boardCopy = [...board];\r\n        updBord(pos, weapon);\r\n        setChance();\r\n        this.props.socket.emit(\"updateBoard\", {\r\n            pos,\r\n            weapon,\r\n            roomId\r\n        });\r\n        boardCopy[pos] = weapon;\r\n        let result = detectWinner(\r\n            [...boardCopy], \r\n            weapon, \r\n            weapon === \"circle\" ? \"cross\" : \"circle\"\r\n        );\r\n        if (result === null) return;\r\n        this.props.socket.emit(\"gameResult\", {result, roomId});\r\n        this.props.sr(result);\r\n    }\r\n\r\n    render() {\r\n        const {val} = this.props;\r\n        switch (val) {\r\n            case \"circle\":\r\n                return <Circle clickEvent={this.handleClick}/>\r\n            case \"cross\":\r\n                return <Cross clickEvent={this.handleClick}/>\r\n            default:\r\n                return <Square clickEvent={this.handleClick}/>\r\n        }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = ({board, menu, multiplayer}) => ({\r\n    currPlayer: board.currentPlayer,\r\n    playingBoard: board.board,\r\n    player1Tool: menu.player1Tool,\r\n    player2: menu.player2,\r\n    board: multiplayer.board,\r\n    weapon: multiplayer.weapon,\r\n    isChance: multiplayer.isChance,\r\n    roomId: multiplayer.roomId\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateBoard: (pos, val) => dispatch(updateBoard(pos, val)),\r\n    updatePlayer: val => dispatch(updatePlayer(val)),\r\n    setResult: val => dispatch(updateResult(val)),\r\n    updBord: (pos, val) => dispatch(updBord(pos, val)),\r\n    setChance: () => dispatch(setChance()),\r\n    sr: res => dispatch(sr(res))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ComponentDecider);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {BoardContainerStyles} from './board.styles';\r\n\r\n// Componets\r\nimport ComponentDecider from '../component-decider/component-decider.component';\r\n\r\nconst Board = ({playingBoard, playingBoard2, multiplayer, socket}) => {\r\n    let boardToUse = multiplayer === true ? playingBoard2 : playingBoard;\r\n    return (\r\n        <BoardContainerStyles>\r\n            {\r\n                boardToUse.map(\r\n                    (val, idx) => \r\n                        <ComponentDecider\r\n                            key={idx}\r\n                            val={val}\r\n                            pos={idx}\r\n                            isMultiplayer={multiplayer}\r\n                            socket={socket}\r\n                        />\r\n                )\r\n            }\r\n        </BoardContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({board, multiplayer}) => ({\r\n    playingBoard: board.board,\r\n    playingBoard2: multiplayer.board\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Board);","import styled from \"styled-components\";\r\n\r\nexport const ScoreBoardContainerStyles = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-right: 14rem;\r\n`;\r\n\r\nexport const TextStyles = styled.span`\r\n    font-size: 1.4rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {\r\n    ScoreBoardContainerStyles,\r\n    TextStyles\r\n} from \"./scoreboard.styles\";\r\n\r\nconst ScoreBoard = ({player2, scores, p1Name, p2Name}) => {\r\n    return (\r\n        <ScoreBoardContainerStyles>\r\n            <TextStyles>Games: {scores[0]}</TextStyles>\r\n            <TextStyles>\r\n                {\r\n                    player2 === \"Computer\" \r\n                    ? \"You\" \r\n                    : p1Name.length < 1 || p1Name.trim() === \"\"\r\n                    ? \"Player 1\"\r\n                    : p1Name\r\n                }: {scores[1]}\r\n            </TextStyles>\r\n            <TextStyles>\r\n                {\r\n                    player2 === \"Computer\"\r\n                    ? \"Computer\"\r\n                    : p2Name.length < 1 || p2Name.trim() === \"\"\r\n                    ? \"Player 2\"\r\n                    : p2Name\r\n                }: {scores[2]}\r\n            </TextStyles>\r\n            <TextStyles>Tie: {scores[3]}</TextStyles>\r\n        </ScoreBoardContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({menu, score, players}) => ({\r\n    player2: menu.player2,\r\n    scores: score.scoreArray,\r\n    p1Name: players.player1Name,\r\n    p2Name: players.player2Name\r\n});\r\n\r\nexport default connect(mapStateToProps)(ScoreBoard);","import styled from \"styled-components\";\r\n\r\nexport const ResetButtonStyles = styled.div`\r\n    appearance: none;\r\n    border: 1px solid;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n    padding: 5px 16px;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n    margin-left: 14rem;\r\n    margin-top: 0.4rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n    background-color: #da3633;\r\n    border-color: #f85149;\r\n    color: white;\r\n\r\n    &:hover {\r\n        color: #f85149;\r\n        border-color: #30363d;\r\n        background-color: #21262d;\r\n    }\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {ResetButtonStyles} from \"./reset-button.styles\";\r\n\r\n// Actions\r\nimport {resetMenu} from \"../../redux/menu/menu.actions\";\r\nimport {resetBoard} from '../../redux/board/board.actions';\r\nimport {resetScore} from \"../../redux/score/score.actions\";\r\nimport {resetPlayers} from \"../../redux/players/players.actions\";\r\n\r\nconst ResetButton = ({menuReset, boardReset, scoreReset, playersReset}) => (\r\n    <ResetButtonStyles\r\n        onClick={\r\n            () => {\r\n                menuReset();\r\n                boardReset();\r\n                scoreReset();\r\n                playersReset();\r\n            }\r\n        }\r\n    >Reset</ResetButtonStyles>\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    menuReset: () => dispatch(resetMenu()),\r\n    boardReset: () => dispatch(resetBoard()),\r\n    scoreReset: () => dispatch(resetScore()),\r\n    playersReset: () => dispatch(resetPlayers())\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(ResetButton);","import styled from \"styled-components\";\r\n\r\nexport const ResultContainerStyles = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    font-size: 4em;\r\n    font-weight: bold;\r\n    background-color: rgba(0, 0, 0, 0.9);\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nexport const CloseButtonStyles = styled.button`\r\n    appearance: none;\r\n    border: 1px solid;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n    padding: 5px 16px;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n    margin-top: 0.4rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n    background-color: #dfd32c;\r\n    border-color: #dceb0c;\r\n    color: white;\r\n\r\n    &:hover {\r\n        color: #dceb0c;\r\n        border-color: #30363d;\r\n        background-color: #21262d;\r\n    }\r\n`;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// Styles\r\nimport {\r\n    ResultContainerStyles,\r\n    CloseButtonStyles\r\n} from \"./result.styles\";\r\n\r\n// Action\r\nimport {resetBoard} from \"../../redux/board/board.actions\";\r\nimport {updateScore, updateResult} from \"../../redux/score/score.actions\";\r\n\r\nconst getIndex = {\r\n    \"Player 1\": 0,\r\n    \"You\": 0,\r\n    \"Computer\": 1,\r\n    \"Player 2\": 1,\r\n    \"tie\": 2\r\n};\r\n\r\nconst Result = ({winner, boardReset, scoreUpdater, resultReset, p1Name, p2Name}) => {\r\n    const messageToPrint = () => {\r\n        if (winner === \"tie\")\r\n            return \"Game tied\";\r\n        let dood = winner;\r\n        if (winner === \"Player 1\")\r\n            dood = p1Name.length < 1 || p1Name.trim() === \"\" ? \"Player 1\" : p1Name;\r\n        else if (winner === \"Player 2\")\r\n            dood = p2Name.length < 1 || p2Name.trim() === \"\" ? \"Player 2\" : p2Name;\r\n        return `${dood} won the game`\r\n    };\r\n\r\n    scoreUpdater(getIndex[winner] + 1);\r\n    return (\r\n        <ResultContainerStyles>\r\n            {messageToPrint()}\r\n            <CloseButtonStyles \r\n                onClick={\r\n                    () => {\r\n                        boardReset();\r\n                        resultReset();\r\n                    }\r\n                }\r\n            >Close</CloseButtonStyles>\r\n        </ResultContainerStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({players}) => ({\r\n    p1Name: players.player1Name,\r\n    p2Name: players.player2Name\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    boardReset: () => dispatch(resetBoard()),\r\n    scoreUpdater: idx => dispatch(updateScore(idx)),\r\n    resultReset: () => dispatch(updateResult(null))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Result);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {\r\n    AppContainerStyles,\r\n    CurrentPlayerStyles\r\n} from \"./home.styles\";\r\n\r\n// Components\r\nimport Header from '../../components/header/header.component';\r\nimport Menu from '../../components/menu/menu.component';\r\nimport Board from '../../components/board/board.component';\r\nimport ScoreBoard from '../../components/scoreboard/scoreboard.component';\r\nimport ResetButton from '../../components/reset-button/reset-button.component';\r\nimport Result from '../../components/result/result.component';\r\n\r\nclass Home extends React.Component {\r\n    nameToPrint = () => {\r\n        const {currPlayer, player2, p1Name, p2Name} = this.props;\r\n        if (currPlayer === \"Player 1\" && player2 === \"Computer\")\r\n            return \"Your\";\r\n        if (currPlayer === \"Player 1\" && player2 === \"Player 2\")\r\n            return p1Name.length < 1 || p1Name.trim() === \"\"\r\n                ? \"Player 1\"\r\n                : p1Name;\r\n        if (currPlayer === \"Player 2\" && player2 === \"Computer\")\r\n            return \"Computer\";\r\n        return p2Name.length < 1 || p2Name.trim() === \"\"\r\n            ? \"Player 2\"\r\n            : p2Name;\r\n    }\r\n\r\n    render() {\r\n        const {level, result} = this.props;\r\n        return (\r\n            <AppContainerStyles>\r\n                {result !== null && <Result winner={result}/>}\r\n                <Header />\r\n                {\r\n                    level < 2\r\n                    ? <Menu />\r\n                    : <span>\r\n                        <ScoreBoard />\r\n                        <CurrentPlayerStyles>\r\n                            {`${this.nameToPrint()}'s turn`}\r\n                        </CurrentPlayerStyles>\r\n                        <Board multiplayer={false}/>\r\n                        <ResetButton />\r\n                      </span>\r\n                }\r\n            </AppContainerStyles>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({menu, board, score, players}) => ({\r\n    level: menu.menuLevel,\r\n    currPlayer: board.currentPlayer,\r\n    player2: menu.player2,\r\n    player1Tool: menu.player1Tool,\r\n    playingBoard: board.board,\r\n    result: score.result,\r\n    p1Name: players.player1Name,\r\n    p2Name: players.player2Name\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);","import styled, {css} from \"styled-components\";\r\n\r\nconst commonButtonStyles = css`\r\n    border: none;\r\n    padding: 0rem 0.7rem 0.2rem 0.7rem;\r\n    font-size: 1.4rem;\r\n    border-radius: 1rem;\r\n    background-color: rgb(235, 235, 57);\r\n    color: black;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const MultiplayerContainerStyles = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const MenuFormStyles = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 4rem;\r\n    border: 0.3rem solid #1c90dd;\r\n    border-radius: 3rem;\r\n    padding: 1rem;\r\n    padding-top: 0rem;\r\n    padding-bottom: 0rem;\r\n`;\r\n\r\nexport const RoomTitleStyles = styled.span`\r\n    font-size: 2rem;\r\n    margin: 0rem;\r\n`;\r\n\r\nexport const RoomStyles = styled.input`\r\n    margin-top: 0.5rem;\r\n    padding: 0.4rem;\r\n    background-color: #161b22;\r\n    border-radius: 1rem;\r\n    font-size: 1.2rem;\r\n    color: white;\r\n    border: 0.2rem solid rgba(55, 106, 176, 0.5);\r\n    outline: none;\r\n    width: auto;\r\n    font-family: 'Patrick Hand';\r\n    &::focus {\r\n        border: 0.2rem solid rgb(28, 144, 221);\r\n        border-radius: 1rem;\r\n    }\r\n`;\r\n\r\nexport const JoinStyles = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nexport const JoinButtonStyles = styled.button`\r\n    ${commonButtonStyles}\r\n`;\r\n\r\nexport const CreateButtonStyles = styled.button`\r\n    ${commonButtonStyles}\r\n    background-color: rgb(63, 235, 57);\r\n`;","import React from \"react\";\r\n\r\nimport {\r\n    MultiplayerContainerStyles,\r\n    MenuFormStyles,\r\n    RoomTitleStyles,\r\n    RoomStyles,\r\n    JoinStyles,\r\n    JoinButtonStyles,\r\n    CreateButtonStyles\r\n} from \"./Multiplayer.styles\";\r\n\r\n// Components\r\nimport Header from \"../../components/header/header.component\";\r\n\r\nclass Multiplayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roomId: \"\"\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    handleRoom = (event) => {\r\n        event.preventDefault();\r\n        const {roomId} = this.state;\r\n        const regex = /^[a-z0-9]+$/i;\r\n        if (roomId.length < 6) {\r\n            window.alert(\"Room Id must be atleast 6 characters long\");\r\n            return;\r\n        }\r\n        if (roomId.includes(\" \") || !regex.test(roomId)) {\r\n            window.alert(\"Room Id can only have alphanumerics\");\r\n            return;\r\n        }\r\n        this.props.history.push(`${this.props.match.url}/rooms/${roomId}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MultiplayerContainerStyles>\r\n                <Header />\r\n                <MenuFormStyles onSubmit={this.handleRoom}>\r\n                    <RoomTitleStyles>Rooms</RoomTitleStyles>\r\n                    <RoomStyles \r\n                        type=\"text\"\r\n                        placeholder=\"Room ID\"\r\n                        name=\"roomId\"\r\n                        value={this.state.roomId}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <JoinStyles>\r\n                        <JoinButtonStyles \r\n                            type=\"submit\"\r\n                        >Join Room</JoinButtonStyles>\r\n                        <CreateButtonStyles  \r\n                            type=\"submit\"\r\n                        >Create Room</CreateButtonStyles>\r\n                    </JoinStyles>\r\n                </MenuFormStyles>\r\n            </MultiplayerContainerStyles>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Multiplayer;","import styled from \"styled-components\";\r\n\r\nexport const RoomContainerStyles = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const RoomTitleStyles = styled.span`\r\n    font-size: 3rem;\r\n    margin-top: 0.4rem;\r\n    color: rgb(28, 144, 221);\r\n    font-family: 'Patrick Hand';\r\n    @media only screen and (max-width: 768px) {\r\n        margin-top: 0rem;\r\n    }\r\n`;\r\n\r\nexport const PlayerStyles = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 1rem;\r\n    margin-top: 1rem;\r\n    @media only screen and (max-width: 768px) {\r\n        flex-direction: column;\r\n        margin-top: 0.2rem;\r\n        gap: 0.5rem;\r\n    }\r\n`;\r\n\r\nexport const LabelStyles = styled.span`\r\n    font-size: 1.4rem;\r\n    font-family: 'Patrick Hand';\r\n`;\r\n\r\nexport const PlayerNameStyles = styled.input`\r\n    margin-top: 0.5rem;\r\n    padding: 0.4rem;\r\n    background-color: #161b22;\r\n    border-radius: 1rem;\r\n    font-size: 1.2rem;\r\n    color: white;\r\n    border: 0.2rem solid rgba(55, 106, 176, 0.5);\r\n    outline: none;\r\n    width: auto;\r\n    font-family: 'Patrick Hand';\r\n    &:focus {\r\n        border: 0.2rem solid rgb(28, 144, 221);\r\n        border-radius: 1rem;\r\n    }\r\n    @media only screen and (max-width: 768px) {\r\n        margin-top: 0.2rem;\r\n    }\r\n`;\r\n\r\nexport const UpdateButtonStyles = styled.div`\r\n    padding: 0rem 0.7rem 0.2rem 0.7rem;\r\n    font-size: 1.4rem;\r\n    border-radius: 1rem;\r\n    background-color: rgb(235, 235, 57);\r\n    color: black;\r\n    cursor: pointer;\r\n    ${({disabled}) => disabled === true && `cursor: default; opacity: 0;`}\r\n`;\r\n\r\nexport const BoardContainerStyles = styled.div`\r\n    margin-top: 2rem;\r\n    @media only screen and (max-width: 768px) {\r\n        margin-top: 0.2rem;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const ResultContainerStyles = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    font-size: 4em;\r\n    font-weight: bold;\r\n    background-color: rgba(0, 0, 0, 0.9);\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nexport const CloseButtonStyles = styled.button`\r\n    appearance: none;\r\n    border: 1px solid;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n    padding: 5px 16px;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n    margin-top: 0.4rem;\r\n    font-family: 'Patrick Hand', cursive;\r\n    background-color: #dfd32c;\r\n    border-color: #dceb0c;\r\n    color: white;\r\n\r\n    &:hover {\r\n        color: #dceb0c;\r\n        border-color: #30363d;\r\n        background-color: #21262d;\r\n    }\r\n`;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport {\r\n    ResultContainerStyles,\r\n    CloseButtonStyles\r\n} from \"./result2.styles\";\r\n\r\nimport {\r\n    newGame\r\n} from \"../../redux/multiplayer/multiplayer.actions\";\r\n\r\nimport {playSound} from \"../../utils\";\r\n\r\nfunction Result2({newGame, result, weapon, player2, left}) {\r\n    const history = useHistory();\r\n    let message;\r\n    if (result === \"tie\") {\r\n        message = \"Game Tied\";\r\n        playSound(\"tie\");\r\n    }\r\n    else if (result === weapon) {\r\n        message = \"You Won the Game\";\r\n        playSound(\"win\");\r\n    }\r\n    else {\r\n        message = `${player2} Won the Game`;\r\n        playSound(\"lost\");\r\n    }\r\n    if (left === true) message = `${player2} left the Game`;\r\n    return (\r\n        <ResultContainerStyles>\r\n            {message}\r\n            <CloseButtonStyles\r\n                onClick={() => {\r\n                    if (left === true) history.push(\"/\");\r\n                    else newGame();\r\n                }}\r\n            >Close</CloseButtonStyles>\r\n        </ResultContainerStyles>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({multiplayer}) => ({\r\n    ...multiplayer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    newGame: () => dispatch(newGame())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Result2);","var _circle;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoader(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      margin: \"auto\",\n      background: \"rgb(13, 17, 23)\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"101px\",\n    height: \"101px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 50,\n    cy: 50,\n    fill: \"none\",\n    stroke: \"#1c90dd\",\n    strokeWidth: 10,\n    r: 31,\n    strokeDasharray: \"146.08405839192537 50.69468613064179\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"rotate\",\n    repeatCount: \"indefinite\",\n    dur: \"1s\",\n    values: \"0 50 50;360 50 50\",\n    keyTimes: \"0;1\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoader);\nexport default __webpack_public_path__ + \"static/media/Loader.da82c788.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport {io} from \"socket.io-client\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    RoomContainerStyles,\r\n    RoomTitleStyles,\r\n    PlayerStyles,\r\n    LabelStyles,\r\n    PlayerNameStyles,\r\n    UpdateButtonStyles,\r\n    BoardContainerStyles\r\n} from \"./Room.styles\";\r\n\r\nimport Board from \"../../components/board/board.component\";\r\nimport Result2 from \"../../components/result2/result2.component\";\r\nimport {ReactComponent as Loader} from \"../../assets/Loader.svg\";\r\n\r\nimport {\r\n    setCurrName,\r\n    setCurrId,\r\n    setPlayer2,\r\n    setWeapon,\r\n    updateBoard,\r\n    setChance,\r\n    resetMultiplayer,\r\n    setRoomId,\r\n    setResult,\r\n    updateState\r\n} from \"../../redux/multiplayer/multiplayer.actions\";\r\n\r\nclass Room extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connected: false,\r\n            playerLeft: false\r\n        };\r\n        this.props.setRoomId(props.match.params.roomId);\r\n        this.socket = null;\r\n    }\r\n    \r\n    componentDidMount() {\r\n        let socketUrl = process.env.NODE_ENV === 'development' \r\n                        ? \"http://localhost:5000/\" \r\n                        : \"https://desolate-island-20928.herokuapp.com/\";\r\n        this.socket = io(socketUrl);\r\n        this.socket.on(\"connect\", () => this.setState({connected: true}));\r\n        this.socket.emit(\"joinRoom\", this.props.match.params.roomId);\r\n        this.socket.on(\"roomFull\", () => {\r\n            this.props.setRoomId(\"\");\r\n            window.alert(\"Room Full\");\r\n            this.props.history.push(\"/multiplayer\");\r\n        });\r\n        const {setId, setWeapon, setChance, setP2} = this.props;\r\n        this.socket.on(\"first\", sockId => {\r\n            setId(sockId);\r\n            setWeapon(\"cross\");\r\n            setChance();\r\n        });\r\n        this.socket.on(\"second\", sockId => {\r\n            setId(sockId);\r\n            setWeapon(\"circle\");\r\n        });\r\n        this.socket.on(\"nameChanged\", name => {\r\n            setP2(name);\r\n        });\r\n        this.socket.on(\"updateBoard\", ({pos, weapon}) => {\r\n            this.props.setBoard(pos, weapon);\r\n            setChance();\r\n        });\r\n        this.socket.on(\"gameResult\", ({result}) => {\r\n            this.props.setResult(result);\r\n        });\r\n        this.socket.on(\"newPlayer\", rmId => {\r\n            window.alert(`${this.props.player2} has joined the game`);\r\n            const {currName, board} = this.props;\r\n            const playerData = {\r\n                player2: currName,\r\n                board,\r\n                isChance: !this.props.isChance\r\n            };\r\n            const dataToSend = {\r\n                playerData,\r\n                roomId: rmId\r\n            };\r\n            this.socket.emit(\"newPlayer\", {...dataToSend});\r\n        });\r\n        this.socket.on(\"updateState\", stateObj => this.props.updateState(stateObj));\r\n        this.socket.on(\"playerLeft\", async () => {\r\n            this.setState({playerLeft: true});\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {reset} = this.props;\r\n        reset();\r\n        this.socket.emit(\"playerLeft\");\r\n        this.socket.disconnect();\r\n    }\r\n\r\n    handleNameChange = event => {\r\n        const {setName} = this.props;\r\n        setName(event.target.value);\r\n    }\r\n\r\n    handleNameUpdate = () => {\r\n        const {currName, roomId} = this.props;\r\n        console.log(\"hello\", roomId);\r\n        this.socket.emit(\"nameChanged\", {\r\n            roomId,\r\n            name: currName\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {currName, player2, roomId, result} = this.props;\r\n        const {connected, playerLeft} = this.state;\r\n        return (\r\n            <RoomContainerStyles>\r\n                {result !== null && <Result2 />}\r\n                {playerLeft && <Result2 left={true}/>}\r\n                {\r\n                    connected \r\n                    ? (\r\n                        <>\r\n                                <RoomTitleStyles>{roomId}</RoomTitleStyles>\r\n                                <PlayerStyles>\r\n                                    <LabelStyles style={\r\n                                        {\r\n                                            color: \"green\",\r\n                                            marginLeft: \"2rem\",\r\n                                            marginRight: \"1rem\"\r\n                                        }\r\n                                    }>You</LabelStyles>\r\n                                    <PlayerNameStyles\r\n                                        type=\"text\"\r\n                                        value={currName}\r\n                                        onChange={this.handleNameChange}\r\n                                    />\r\n                                    <UpdateButtonStyles\r\n                                        onClick={this.handleNameUpdate}\r\n                                    >Update</UpdateButtonStyles>\r\n                                </PlayerStyles>\r\n                                <PlayerStyles>\r\n                                    <LabelStyles\r\n                                        style={{color: \"red\"}}\r\n                                    >Opponent</LabelStyles>\r\n                                    <PlayerNameStyles\r\n                                        type=\"text\"\r\n                                        value={player2}\r\n                                        readOnly={true}\r\n                                    />\r\n                                    <UpdateButtonStyles disabled={true}>Update</UpdateButtonStyles>\r\n                                </PlayerStyles>\r\n                                <BoardContainerStyles>\r\n                                    <Board\r\n                                        multiplayer={true}\r\n                                        socket={this.socket}\r\n                                    />\r\n                                </BoardContainerStyles>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Loader />\r\n                            <LabelStyles>Connecting to Server...</LabelStyles>\r\n                        </>\r\n                    )\r\n                }\r\n            </RoomContainerStyles>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({multiplayer}) => ({\r\n    ...multiplayer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setName: name => dispatch(setCurrName(name)),\r\n    setId: id => dispatch(setCurrId(id)),\r\n    setP2: name => dispatch(setPlayer2(name)),\r\n    setWeapon: weapon => dispatch(setWeapon(weapon)),\r\n    setBoard: (pos, val) => dispatch(updateBoard(pos, val)),\r\n    setChance: () => dispatch(setChance()),\r\n    reset: () => dispatch(resetMultiplayer()),\r\n    setRoomId: id => dispatch(setRoomId(id)),\r\n    setResult: res => dispatch(setResult(res)),\r\n    updateState: obj => dispatch(updateState({...obj}))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Room);","import React from 'react';\r\nimport {Switch, Route, HashRouter} from \"react-router-dom\";\r\n\r\nimport Home from \"../../Pages/Home/home.page\";\r\nimport Multiplayer from \"../../Pages/Multiplayer/Multiplayer.page\";\r\nimport Room from \"../../Pages/Room/Room.page\";\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <HashRouter basename='/'>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home}/>\r\n                    <Route exact path=\"/multiplayer/rooms/:roomId\" component={Room} />\r\n                    <Route exact path=\"/multiplayer\" component={Multiplayer} />\r\n                </Switch>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import menuTypes from \"./menu.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    player2: null,\r\n    player1Tool: null,\r\n    menuLevel: 0\r\n};\r\n\r\nconst menuReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case menuTypes.SET_NO_OF_PLAYERS:\r\n            return action.payload === 1 \r\n                ? {...state, player2: \"Computer\", menuLevel: 1, noOfPlayers: 1}\r\n                : {...state, player2: \"Player 2\", menuLevel: 1, noOfPlayers: 2};\r\n        case menuTypes.SET_PLAYER_1_TOOL:\r\n            return {\r\n                ...state,\r\n                player1Tool: action.payload,\r\n                menuLevel: 2\r\n            };\r\n        case menuTypes.SET_MENU_LEVEL:\r\n            return {\r\n                ...state,\r\n                menuLevel: action.payload\r\n            };\r\n        case menuTypes.RESET_MENU:\r\n            return {\r\n                noOfPlayers: null,\r\n                player2: null,\r\n                player1Tool: null,\r\n                menuLevel: 0\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default menuReducer;","import boardTypes from \"./board.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    currentPlayer: \"Player 1\"\r\n};\r\n\r\nconst boardReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case boardTypes.RESET_BOARD:\r\n            return {\r\n                board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                currentPlayer: \"Player 1\"\r\n            };\r\n        case boardTypes.UPDATE_BOARD: {\r\n            let boardCpy = [...state.board];\r\n            const {pos, val} = action.payload;\r\n            boardCpy[pos] = val;\r\n            return {\r\n                ...state,\r\n                board: [...boardCpy]\r\n            };\r\n        }\r\n        case boardTypes.SET_CURRENT_PLAYER:\r\n            return {\r\n                ...state,\r\n                currentPlayer: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default boardReducer;","import scoreTypes from \"./score.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    scoreArray: [0, 0, 0, 0],\r\n    result: null\r\n};\r\n\r\nconst scoreReducer = (state =INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case scoreTypes.SET_SCORE: {\r\n            let scores = [...state.scoreArray];\r\n            scores[0] += 1;\r\n            scores[action.payload] += 1;\r\n            return {\r\n                ...state,\r\n                scoreArray: [...scores]\r\n            };\r\n        }\r\n        case scoreTypes.RESET_SCORE:\r\n            return {\r\n                ...state,\r\n                scoreArray: [0, 0, 0, 0],\r\n                result: null\r\n            };\r\n        case scoreTypes.UPDATE_RESULT:\r\n            return {\r\n                ...state,\r\n                result: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default scoreReducer;","import playerTypes from \"./players.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    player1Name: \"Player 1\",\r\n    player2Name: \"Player 2\"\r\n};\r\n\r\nconst playersReducers = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case playerTypes.RESET_PLAYERS:\r\n            return {\r\n                player1Name: \"Player 1\",\r\n                player2Name: \"Player 2\"\r\n            };\r\n        case playerTypes.SET_PLAYER_1_NAME:\r\n            return {\r\n                ...state,\r\n                player1Name: action.payload\r\n            };\r\n        case playerTypes.SET_PLAYER_2_NAME:\r\n            return {\r\n                ...state,\r\n                player2Name: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default playersReducers;","import multiplayerTypes from \"./multiplayer.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    currName: \"Player 1\",\r\n    currId: \"\",\r\n    roomId: \"\",\r\n    player2: \"Player 2\",\r\n    weapon: \"\",\r\n    board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    isChance: false,\r\n    result: null\r\n};\r\n\r\nconst multiplayerReducer = (state = INITIAL_STATE, action) => {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case multiplayerTypes.SET_CURRENT_NAME:\r\n            return {...state, currName: payload};\r\n        case multiplayerTypes.SET_CURRENT_ID:\r\n            return {...state, currId: payload};\r\n        case multiplayerTypes.SET_PLAYER_2:\r\n            return {...state, player2: payload};\r\n        case multiplayerTypes.SET_WEAPON:\r\n            return {...state, weapon: payload};\r\n        case multiplayerTypes.UPDATE_BOARD: {\r\n                let boardCopy = [...state.board];\r\n                boardCopy[payload.pos] = payload.val;\r\n                return {...state, board: boardCopy};\r\n            }\r\n        case multiplayerTypes.SET_ROOM_ID:\r\n            return {...state, roomId: payload};\r\n        case multiplayerTypes.SET_CHANCE:\r\n            return {...state, isChance: !state.isChance};\r\n        case multiplayerTypes.SET_RESULT:\r\n            return {...state, result: payload};\r\n        case multiplayerTypes.UPDATE_STATE:\r\n            return {...state, ...payload};\r\n        case multiplayerTypes.NEW_GAME:\r\n            return {...state, board: [0, 0, 0, 0, 0, 0, 0, 0, 0], result: null};\r\n        case multiplayerTypes.RESET_MULTIPLAYER:\r\n            return {\r\n                currName: \"Player 1\",\r\n                currId: \"\",\r\n                roomId: \"\",\r\n                player2: \"Player 2\",\r\n                weapon: \"\",\r\n                board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                isChance: false,\r\n                result: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default multiplayerReducer;","import {combineReducers} from \"redux\";\r\n// import {persistReducer} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// Reducers\r\nimport menuReducer from \"./menu/menu.reducer\";\r\nimport boardReducer from \"./board/board.reducer\";\r\nimport scoreReducer from \"./score/score.reducer\";\r\nimport playersReducers from \"./players/players.reducer\";\r\nimport multiplayerReducer from \"./multiplayer/multiplayer.reducer\";\r\n\r\n// Persist Configuration\r\n// const persistConfig = {\r\n//     key: 'root',\r\n//     storage,\r\n//     whitelist: ['menu', 'board', 'score', 'players']\r\n// };\r\n\r\nconst rootReducer = combineReducers({\r\n    menu: menuReducer,\r\n    board: boardReducer,\r\n    score: scoreReducer,\r\n    players: playersReducers,\r\n    multiplayer: multiplayerReducer\r\n});\r\n\r\n// export default persistReducer(persistConfig, rootReducer);\r\nexport default rootReducer;","import {createStore, applyMiddleware} from \"redux\";\r\n// import {persistStore} from \"redux-persist\";\r\n\r\n// Middlewares\r\nimport logger from \"redux-logger\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n// Root reducer\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [thunkMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development')\r\n    middlewares.push(logger);\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\n// export const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// Styles\r\nimport './index.css';\r\n\r\n// Components\r\nimport App from './containers/app/app.container';\r\nimport {Provider} from 'react-redux';\r\n// import {PersistGate} from 'redux-persist/integration/react';\r\n\r\n// Redux Store\r\nimport {\r\n  store,\r\n  // persistor\r\n} from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate persistor={persistor}> */}\r\n        <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}